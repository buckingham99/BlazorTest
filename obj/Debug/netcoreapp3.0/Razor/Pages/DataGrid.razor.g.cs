#pragma checksum "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "384eb6b4161bd8a9f5e6ae8a0deb4023fec5494f"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorTest.Pages
{
    #line hidden
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTest.Shared;
    using BlazorTest.Models;
    using BlazorTest.Services;
    using BlazorTest.Helpers;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using Microsoft.AspNetCore.Components;
    using System.Reflection;
    using System;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    public class DataGrid : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "div");
            builder.AddAttribute(1, "class", "container");
            builder.AddAttribute(2, "style", "border: 1px dotted black;");
            builder.AddMarkupContent(3, "\r\n    <div class=\"row\"></div>\r\n    ");
            builder.AddMarkupContent(4, "<h5>Child Component - Users DataGrid</h5>\r\n");
#line 17 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
     if (users.Count == 0)
        {

#line default
#line hidden
            builder.AddMarkupContent(5, "    <div class=\"loader\" style=\"display:block\"></div>\r\n");
#line 20 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
        }

#line default
#line hidden
#line 21 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
     if (users.Count > 0)
        {

#line default
#line hidden
            builder.AddContent(6, "    ");
            builder.OpenElement(7, "div");
            builder.AddAttribute(8, "class", "tableFixHead row ");
            builder.AddAttribute(9, "style", "line-height: 0.5");
            builder.AddMarkupContent(10, "\r\n        ");
            builder.OpenElement(11, "table");
            builder.AddAttribute(12, "class", "table table-hover table-condensed table-bordered table-striped");
            builder.AddMarkupContent(13, "\r\n            ");
            builder.OpenElement(14, "thead");
            builder.AddMarkupContent(15, "\r\n                ");
            builder.OpenElement(16, "tr");
            builder.AddMarkupContent(17, "\r\n                    ");
            builder.OpenElement(18, "th");
            builder.AddMarkupContent(19, "\r\n                        ");
            builder.OpenElement(20, "div");
            builder.AddAttribute(21, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("Number")));
            builder.AddMarkupContent(22, "<a href=\"javascript:void(0)\" title=\"Default Sort by Id\"><b> </b></a><span class=\"oi oi-target\" title=\"Id Sort\"></span>");
            builder.CloseElement();
            builder.AddMarkupContent(23, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(24, "\r\n                    ");
            builder.OpenElement(25, "th");
            builder.AddMarkupContent(26, "\r\n                        ");
            builder.OpenElement(27, "div");
            builder.AddAttribute(28, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("Surname")));
            builder.AddMarkupContent(29, "<a href=\"javascript:void(0)\" title=\"Sort by Last Name\"><b>Last Name</b></a> ");
            builder.OpenElement(30, "span");
            builder.AddAttribute(31, "class", SurnameSort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(32, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(33, "\r\n                    ");
            builder.OpenElement(34, "th");
            builder.AddMarkupContent(35, "\r\n                        ");
            builder.OpenElement(36, "div");
            builder.AddAttribute(37, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("GivenName")));
            builder.AddMarkupContent(38, "<a href=\"javascript:void(0)\" title=\"Sort by First Name\"><b>First Name</b></a> ");
            builder.OpenElement(39, "span");
            builder.AddAttribute(40, "class", GivenNameSort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(41, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(42, "\r\n                    ");
            builder.OpenElement(43, "th");
            builder.AddMarkupContent(44, "\r\n                        ");
            builder.OpenElement(45, "div");
            builder.AddAttribute(46, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("StreetAddress")));
            builder.AddMarkupContent(47, "<a href=\"javascript:void(0)\" title=\"Sort by Street Address\"><b>Address</b></a> ");
            builder.OpenElement(48, "span");
            builder.AddAttribute(49, "class", StreetAddressSort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(50, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(51, "\r\n                    ");
            builder.OpenElement(52, "th");
            builder.AddMarkupContent(53, "\r\n                        ");
            builder.OpenElement(54, "div");
            builder.AddAttribute(55, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("City")));
            builder.AddMarkupContent(56, "<a href=\"javascript:void(0)\" title=\"Sort by City\"><b>City</b></a> ");
            builder.OpenElement(57, "span");
            builder.AddAttribute(58, "class", CitySort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(59, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(60, "\r\n                    ");
            builder.OpenElement(61, "th");
            builder.AddMarkupContent(62, "\r\n                        ");
            builder.OpenElement(63, "div");
            builder.AddAttribute(64, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("State")));
            builder.AddMarkupContent(65, "<a href=\"javascript:void(0)\" title=\"Sort by State\"><b>State</b></a> ");
            builder.OpenElement(66, "span");
            builder.AddAttribute(67, "class", StateSort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(68, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(69, "\r\n                    ");
            builder.OpenElement(70, "th");
            builder.AddMarkupContent(71, "\r\n                        ");
            builder.OpenElement(72, "div");
            builder.AddAttribute(73, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("ZipCode")));
            builder.AddMarkupContent(74, "<a href=\"javascript:void(0)\" title=\"Sort by Zip Code\"><b>Zip</b></a> ");
            builder.OpenElement(75, "span");
            builder.AddAttribute(76, "class", ZipCodeSort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(77, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(78, "\r\n                    ");
            builder.OpenElement(79, "th");
            builder.AddMarkupContent(80, "\r\n                        ");
            builder.OpenElement(81, "div");
            builder.AddAttribute(82, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SortLinkClicked("TelephoneNumber")));
            builder.AddMarkupContent(83, "<a href=\"javascript:void(0)\" title=\"Sort by Telephone Number\"><b>Phone</b></a> ");
            builder.OpenElement(84, "span");
            builder.AddAttribute(85, "class", TelephoneNumberSort);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(86, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(87, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(88, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(89, "\r\n            ");
            builder.OpenElement(90, "tbody");
            builder.AddMarkupContent(91, "\r\n");
#line 54 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                 if (displayUsers.Count > 0)
                        {
                

#line default
#line hidden
#line 56 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                 foreach (var u in @displayUsers)
                            {

#line default
#line hidden
            builder.AddContent(92, "                ");
            builder.OpenElement(93, "tr");
            builder.AddAttribute(94, "class", "datarow");
            builder.AddAttribute(95, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => EditUser(@u)));
            builder.AddAttribute(96, "title", "Click to Edit");
            builder.AddMarkupContent(97, "\r\n                    ");
            builder.OpenElement(98, "td");
            builder.OpenElement(99, "a");
            builder.AddAttribute(100, "href", "javascript:void(0);");
            builder.AddAttribute(101, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => EditUser(@u)));
            builder.AddMarkupContent(102, "<span style=\"color:black;\" class=\"oi oi-magnifying-glass\"></span>");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(103, "\r\n                    ");
            builder.OpenElement(104, "td");
            builder.AddContent(105, u.Surname);
            builder.CloseElement();
            builder.AddMarkupContent(106, "\r\n                    ");
            builder.OpenElement(107, "td");
            builder.AddContent(108, u.GivenName);
            builder.CloseElement();
            builder.AddMarkupContent(109, "\r\n                    ");
            builder.OpenElement(110, "td");
            builder.AddContent(111, u.StreetAddress);
            builder.CloseElement();
            builder.AddMarkupContent(112, "\r\n                    ");
            builder.OpenElement(113, "td");
            builder.AddContent(114, u.City);
            builder.CloseElement();
            builder.AddMarkupContent(115, "\r\n                    ");
            builder.OpenElement(116, "td");
            builder.AddContent(117, u.State);
            builder.CloseElement();
            builder.AddMarkupContent(118, "\r\n                    ");
            builder.OpenElement(119, "td");
            builder.AddContent(120, u.ZipCode.ToString());
            builder.CloseElement();
            builder.AddMarkupContent(121, "\r\n                    ");
            builder.OpenElement(122, "td");
            builder.AddContent(123, u.TelephoneNumber);
            builder.CloseElement();
            builder.AddMarkupContent(124, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(125, "\r\n");
#line 68 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                            }

#line default
#line hidden
#line 68 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                             
                        }

#line default
#line hidden
            builder.AddContent(126, "            ");
            builder.CloseElement();
            builder.AddMarkupContent(127, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(128, "\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(129, "\r\n    ");
            builder.OpenElement(130, "div");
            builder.AddAttribute(131, "class", "row");
            builder.AddMarkupContent(132, "\r\n");
#line 74 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
         if (displayUsers.Count > 0)
                {

#line default
#line hidden
            builder.AddContent(133, "        ");
            builder.OpenElement(134, "div");
            builder.AddMarkupContent(135, "\r\n            ");
            builder.OpenElement(136, "ul");
            builder.AddAttribute(137, "class", "pagination pagination-sm pager");
            builder.AddMarkupContent(138, "\r\n");
#line 78 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                 foreach (var i in btnlist)
                            {
                

#line default
#line hidden
#line 80 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                 if ((i >= (currentPage-2) && i <= (currentPage+2)) || i == checkPageInt(i)  || (i == btnlist.Count) || i == 1)
                                {

#line default
#line hidden
            builder.AddContent(139, "                ");
            builder.OpenElement(140, "li");
            builder.AddAttribute(141, "class", "page-item" + " " + (i == currentPage ? "active" : ""));
            builder.AddMarkupContent(142, "\r\n                    ");
            builder.OpenElement(143, "a");
            builder.AddAttribute(144, "href", "javascript:void(0)");
            builder.AddAttribute(145, "class", "page-link");
            builder.AddAttribute(146, "title", "Page:" + " " + (i));
            builder.AddAttribute(147, "value-bind", i);
            builder.AddAttribute(148, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => ChangePage(@i)));
            builder.AddContent(149, i);
            builder.CloseElement();
            builder.AddMarkupContent(150, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(151, "\r\n");
#line 85 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                                }

#line default
#line hidden
#line 85 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                                 
                            }

#line default
#line hidden
            builder.AddContent(152, "            ");
            builder.CloseElement();
            builder.AddMarkupContent(153, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(154, "\r\n");
#line 89 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                }

#line default
#line hidden
            builder.AddContent(155, "    ");
            builder.CloseElement();
            builder.AddMarkupContent(156, "\r\n");
#line 91 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
        }

#line default
#line hidden
            builder.AddMarkupContent(157, "\r\n");
            builder.CloseElement();
            builder.AddMarkupContent(158, "\r\n\r\n");
#line 95 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
 if (SelectedUser != null)
    {

#line default
#line hidden
            builder.OpenElement(159, "div");
            builder.AddAttribute(160, "class", "container mt-lg-4");
            builder.AddMarkupContent(161, "\r\n    ");
            builder.OpenElement(162, "div");
            builder.AddAttribute(163, "class", "modal");
            builder.AddAttribute(164, "id", "editUserModal");
            builder.AddMarkupContent(165, "\r\n        ");
            builder.OpenElement(166, "div");
            builder.AddAttribute(167, "class", "modal-dialog modal-lg modal-dialog-scrollable");
            builder.AddMarkupContent(168, "\r\n            ");
            builder.OpenElement(169, "div");
            builder.AddAttribute(170, "class", "modal-content");
            builder.AddMarkupContent(171, "\r\n                ");
            builder.OpenElement(172, "div");
            builder.AddAttribute(173, "class", "modal-header");
            builder.AddAttribute(174, "style", "background-color:lightgray;");
            builder.AddMarkupContent(175, "\r\n                    ");
            builder.OpenElement(176, "h11");
            builder.AddAttribute(177, "id", "modalTitle");
            builder.AddAttribute(178, "class", "modal-title");
            builder.AddContent(179, "Edit User: ");
            builder.OpenElement(180, "b");
            builder.OpenElement(181, "u");
            builder.AddContent(182, SelectedUser.GivenName + " " + SelectedUser.Surname);
            builder.CloseElement();
            builder.CloseElement();
            builder.AddContent(183, "  ");
            builder.AddContent(184, SelectedUser.StreetAddress);
            builder.AddContent(185, " ");
            builder.AddContent(186, SelectedUser.City);
            builder.AddContent(187, ",  ");
            builder.AddContent(188, SelectedUser.StateFull);
            builder.AddContent(189, "  ");
            builder.AddContent(190, SelectedUser.ZipCode);
            builder.AddContent(191, " ");
            builder.AddContent(192, SelectedUser.CountryFull);
            builder.AddContent(193, " ");
            builder.CloseElement();
            builder.AddMarkupContent(194, "\r\n                    ");
            builder.OpenElement(195, "button");
            builder.AddAttribute(196, "type", "button");
            builder.AddAttribute(197, "aria-label", "Close");
            builder.AddAttribute(198, "class", "close");
            builder.AddAttribute(199, "data-dismiss", "modal");
            builder.AddAttribute(200, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => CancelSaveUser(SelectedUser)));
            builder.AddMarkupContent(201, "\r\n                        ");
            builder.AddMarkupContent(202, "<span aria-hidden=\"true\">&times;</span>\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(203, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(204, "\r\n                ");
            builder.OpenElement(205, "div");
            builder.AddAttribute(206, "class", "modal-body");
            builder.AddMarkupContent(207, "\r\n                    ");
            builder.OpenElement(208, "div");
            builder.AddAttribute(209, "class", "row");
            builder.AddMarkupContent(210, "\r\n                        ");
            builder.OpenElement(211, "div");
            builder.AddAttribute(212, "class", "btn-group");
            builder.AddAttribute(213, "role", "group");
            builder.AddAttribute(214, "aria-label", "Basic example");
            builder.AddMarkupContent(215, "\r\n                            ");
            builder.OpenElement(216, "div");
            builder.AddMarkupContent(217, "\r\n                                ");
            builder.OpenElement(218, "button");
            builder.AddAttribute(219, "type", "button");
            builder.AddAttribute(220, "class", "btn btn-secondary");
            builder.AddAttribute(221, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => ChangeTab("User")));
            builder.AddAttribute(222, "href", "javascript:void(0)");
            builder.AddContent(223, "User");
            builder.CloseElement();
            builder.AddMarkupContent(224, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(225, "\r\n                            ");
            builder.OpenElement(226, "div");
            builder.AddMarkupContent(227, "\r\n                                ");
            builder.OpenElement(228, "button");
            builder.AddAttribute(229, "type", "button");
            builder.AddAttribute(230, "class", "btn btn-secondary");
            builder.AddAttribute(231, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => ChangeTab("CreditData")));
            builder.AddAttribute(232, "href", "javascript:void(0)");
            builder.AddContent(233, "Credit");
            builder.CloseElement();
            builder.AddMarkupContent(234, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(235, "\r\n                            ");
            builder.OpenElement(236, "div");
            builder.AddMarkupContent(237, "\r\n                                ");
            builder.OpenElement(238, "button");
            builder.AddAttribute(239, "type", "button");
            builder.AddAttribute(240, "class", "btn btn-secondary");
            builder.AddAttribute(241, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => ChangeTab("Employment")));
            builder.AddAttribute(242, "href", "javascript:void(0)");
            builder.AddContent(243, "Employment");
            builder.CloseElement();
            builder.AddMarkupContent(244, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(245, "\r\n                            ");
            builder.OpenElement(246, "div");
            builder.AddMarkupContent(247, "\r\n                                ");
            builder.OpenElement(248, "button");
            builder.AddAttribute(249, "type", "button");
            builder.AddAttribute(250, "class", "btn btn-secondary");
            builder.AddAttribute(251, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => ChangeTab("mapDisplay")));
            builder.AddAttribute(252, "href", "javascript:void(0)");
            builder.AddContent(253, "Map");
            builder.CloseElement();
            builder.AddMarkupContent(254, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(255, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(256, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(257, "\r\n                    ");
            builder.OpenElement(258, "div");
            builder.AddAttribute(259, "class", "tab-content");
            builder.AddMarkupContent(260, "\r\n                        ");
            builder.OpenElement(261, "div");
            builder.AddAttribute(262, "id", "User");
            builder.AddAttribute(263, "class", "tab-pane active");
            builder.AddMarkupContent(264, "\r\n                            ");
            builder.OpenElement(265, "div");
            builder.AddAttribute(266, "class", "row");
            builder.AddMarkupContent(267, "\r\n                                ");
            builder.OpenElement(268, "div");
            builder.AddAttribute(269, "class", "col-sm-6");
            builder.AddMarkupContent(270, "\r\n                                    ");
            builder.AddMarkupContent(271, "<label for=\"first_name\">First Name</label>\r\n                                    ");
            builder.OpenElement(272, "input");
            builder.AddAttribute(273, "type", "text");
            builder.AddAttribute(274, "name", "first_name");
            builder.AddAttribute(275, "id", "first_name");
            builder.AddAttribute(276, "class", "form-control input-sm");
            builder.AddAttribute(277, "placeholder", "First Name");
            builder.AddAttribute(278, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.GivenName));
            builder.AddAttribute(279, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.GivenName = __value, SelectedUser.GivenName));
            builder.CloseElement();
            builder.AddMarkupContent(280, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(281, "\r\n                                ");
            builder.OpenElement(282, "div");
            builder.AddAttribute(283, "class", "col-sm-6");
            builder.AddMarkupContent(284, "\r\n                                    ");
            builder.AddMarkupContent(285, "<label for=\"last_name\">Last Name</label>\r\n                                    ");
            builder.OpenElement(286, "input");
            builder.AddAttribute(287, "type", "text");
            builder.AddAttribute(288, "name", "last_name");
            builder.AddAttribute(289, "id", "last_name");
            builder.AddAttribute(290, "class", "form-control input-sm");
            builder.AddAttribute(291, "placeholder", "Last Name");
            builder.AddAttribute(292, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Surname));
            builder.AddAttribute(293, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Surname = __value, SelectedUser.Surname));
            builder.CloseElement();
            builder.AddMarkupContent(294, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(295, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(296, "\r\n                            ");
            builder.OpenElement(297, "div");
            builder.AddAttribute(298, "class", "row");
            builder.AddMarkupContent(299, "\r\n                                ");
            builder.OpenElement(300, "div");
            builder.AddAttribute(301, "class", "col-sm-12");
            builder.AddMarkupContent(302, "\r\n                                    ");
            builder.AddMarkupContent(303, "<label for=\"address\">Street Address</label>\r\n                                    ");
            builder.OpenElement(304, "input");
            builder.AddAttribute(305, "type", "text");
            builder.AddAttribute(306, "name", "address");
            builder.AddAttribute(307, "id", "streetAddress");
            builder.AddAttribute(308, "class", "form-control input-sm");
            builder.AddAttribute(309, "placeholder", "Street Address");
            builder.AddAttribute(310, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.StreetAddress));
            builder.AddAttribute(311, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.StreetAddress = __value, SelectedUser.StreetAddress));
            builder.CloseElement();
            builder.AddMarkupContent(312, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(313, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(314, "\r\n                            ");
            builder.OpenElement(315, "div");
            builder.AddAttribute(316, "class", "row");
            builder.AddMarkupContent(317, "\r\n                                ");
            builder.OpenElement(318, "div");
            builder.AddAttribute(319, "class", "col-sm-6");
            builder.AddMarkupContent(320, "\r\n                                    ");
            builder.AddMarkupContent(321, "<label for=\"city\">City</label>\r\n                                    ");
            builder.OpenElement(322, "input");
            builder.AddAttribute(323, "type", "text");
            builder.AddAttribute(324, "name", "city");
            builder.AddAttribute(325, "id", "city");
            builder.AddAttribute(326, "class", "form-control input-sm");
            builder.AddAttribute(327, "placeholder", "City");
            builder.AddAttribute(328, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.City));
            builder.AddAttribute(329, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.City = __value, SelectedUser.City));
            builder.CloseElement();
            builder.AddMarkupContent(330, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(331, "\r\n                                ");
            builder.OpenElement(332, "div");
            builder.AddAttribute(333, "class", "col-sm-6");
            builder.AddMarkupContent(334, "\r\n                                    ");
            builder.AddMarkupContent(335, "<label for=\"state\">State</label>\r\n                                    ");
            builder.OpenElement(336, "input");
            builder.AddAttribute(337, "type", "text");
            builder.AddAttribute(338, "name", "state");
            builder.AddAttribute(339, "id", "state");
            builder.AddAttribute(340, "class", "form-control input-sm");
            builder.AddAttribute(341, "placeholder", "State");
            builder.AddAttribute(342, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.State));
            builder.AddAttribute(343, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.State = __value, SelectedUser.State));
            builder.CloseElement();
            builder.AddMarkupContent(344, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(345, "\r\n                                ");
            builder.OpenElement(346, "div");
            builder.AddAttribute(347, "class", "col-sm-6");
            builder.AddMarkupContent(348, "\r\n                                    ");
            builder.AddMarkupContent(349, "<label for=\"zipCode\">Zip Code</label>\r\n                                    ");
            builder.OpenElement(350, "input");
            builder.AddAttribute(351, "type", "text");
            builder.AddAttribute(352, "name", "zipCode");
            builder.AddAttribute(353, "id", "zipCode");
            builder.AddAttribute(354, "class", "form-control input-sm");
            builder.AddAttribute(355, "placeholder", "Zip Code");
            builder.AddAttribute(356, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.ZipCode));
            builder.AddAttribute(357, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.ZipCode = __value, SelectedUser.ZipCode));
            builder.CloseElement();
            builder.AddMarkupContent(358, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(359, "\r\n                                ");
            builder.OpenElement(360, "div");
            builder.AddAttribute(361, "class", "col-sm-6");
            builder.AddMarkupContent(362, "\r\n                                    ");
            builder.AddMarkupContent(363, "<label for=\"telephone\">Telephone</label>\r\n                                    ");
            builder.OpenElement(364, "input");
            builder.AddAttribute(365, "type", "tel");
            builder.AddAttribute(366, "name", "telephone");
            builder.AddAttribute(367, "id", "telephone");
            builder.AddAttribute(368, "class", "form-control input-sm");
            builder.AddAttribute(369, "placeholder", "Telephone #");
            builder.AddAttribute(370, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.TelephoneNumber));
            builder.AddAttribute(371, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.TelephoneNumber = __value, SelectedUser.TelephoneNumber));
            builder.CloseElement();
            builder.AddMarkupContent(372, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(373, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(374, "\r\n                            ");
            builder.OpenElement(375, "div");
            builder.AddAttribute(376, "class", "row");
            builder.AddMarkupContent(377, "\r\n                                ");
            builder.OpenElement(378, "div");
            builder.AddAttribute(379, "class", "col-sm-6");
            builder.AddMarkupContent(380, "\r\n                                    ");
            builder.AddMarkupContent(381, "<label for=\"zodiacSign\">Zodiac Sign</label>\r\n                                    ");
            builder.OpenElement(382, "input");
            builder.AddAttribute(383, "type", "text");
            builder.AddAttribute(384, "name", "zodiacSign");
            builder.AddAttribute(385, "id", "zodiacSign");
            builder.AddAttribute(386, "class", "form-control input-sm");
            builder.AddAttribute(387, "placeholder", "Zodiac Sign");
            builder.AddAttribute(388, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.TropicalZodiac));
            builder.AddAttribute(389, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.TropicalZodiac = __value, SelectedUser.TropicalZodiac));
            builder.CloseElement();
            builder.AddMarkupContent(390, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(391, "\r\n                                ");
            builder.OpenElement(392, "div");
            builder.AddAttribute(393, "class", "col-sm-6");
            builder.AddMarkupContent(394, "\r\n                                    ");
            builder.AddMarkupContent(395, "<label for=\"birthdate\">Birth Day</label>\r\n                                    ");
            builder.OpenElement(396, "input");
            builder.AddAttribute(397, "type", "text");
            builder.AddAttribute(398, "name", "birthdate");
            builder.AddAttribute(399, "id", "birthdate");
            builder.AddAttribute(400, "class", "form-control input-sm");
            builder.AddAttribute(401, "placeholder", "Birthday");
            builder.AddAttribute(402, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Birthday));
            builder.AddAttribute(403, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Birthday = __value, SelectedUser.Birthday));
            builder.CloseElement();
            builder.AddMarkupContent(404, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(405, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(406, "\r\n                            ");
            builder.OpenElement(407, "div");
            builder.AddAttribute(408, "class", "row");
            builder.AddMarkupContent(409, "\r\n                                ");
            builder.OpenElement(410, "div");
            builder.AddAttribute(411, "class", "col-sm-6");
            builder.AddMarkupContent(412, "\r\n                                    ");
            builder.AddMarkupContent(413, "<label for=\"momMaiden\">Mothers Maiden Name</label>\r\n                                    ");
            builder.OpenElement(414, "input");
            builder.AddAttribute(415, "type", "text");
            builder.AddAttribute(416, "name", "momMaiden");
            builder.AddAttribute(417, "id", "momMaiden");
            builder.AddAttribute(418, "class", "form-control input-sm");
            builder.AddAttribute(419, "placeholder", "Mother\'s Maiden Name");
            builder.AddAttribute(420, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.MothersMaiden));
            builder.AddAttribute(421, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.MothersMaiden = __value, SelectedUser.MothersMaiden));
            builder.CloseElement();
            builder.AddMarkupContent(422, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(423, "\r\n                                ");
            builder.OpenElement(424, "div");
            builder.AddAttribute(425, "class", "col-sm-6");
            builder.AddMarkupContent(426, "\r\n                                    ");
            builder.AddMarkupContent(427, "<label for=\"age\">Age</label>\r\n                                    ");
            builder.OpenElement(428, "input");
            builder.AddAttribute(429, "type", "text");
            builder.AddAttribute(430, "name", "age");
            builder.AddAttribute(431, "id", "age");
            builder.AddAttribute(432, "class", "form-control input-sm");
            builder.AddAttribute(433, "placeholder", "Age");
            builder.AddAttribute(434, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Age));
            builder.AddAttribute(435, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Age = __value, SelectedUser.Age));
            builder.CloseElement();
            builder.AddMarkupContent(436, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(437, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(438, "\r\n                            ");
            builder.OpenElement(439, "div");
            builder.AddAttribute(440, "class", "row");
            builder.AddMarkupContent(441, "\r\n                                ");
            builder.OpenElement(442, "div");
            builder.AddAttribute(443, "class", "col-sm-6");
            builder.AddMarkupContent(444, "\r\n                                    ");
            builder.AddMarkupContent(445, "<label for=\"bloodType\">Blood Type</label>\r\n                                    ");
            builder.OpenElement(446, "input");
            builder.AddAttribute(447, "type", "text");
            builder.AddAttribute(448, "name", "bloodType");
            builder.AddAttribute(449, "id", "bloodType");
            builder.AddAttribute(450, "class", "form-control input-sm");
            builder.AddAttribute(451, "placeholder", "Blood Type");
            builder.AddAttribute(452, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.BloodType));
            builder.AddAttribute(453, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.BloodType = __value, SelectedUser.BloodType));
            builder.CloseElement();
            builder.AddMarkupContent(454, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(455, "\r\n                                ");
            builder.OpenElement(456, "div");
            builder.AddAttribute(457, "class", "col-sm-6");
            builder.AddMarkupContent(458, "\r\n                                    ");
            builder.AddMarkupContent(459, "<label for=\"pounds\">Weight</label>\r\n                                    ");
            builder.OpenElement(460, "input");
            builder.AddAttribute(461, "type", "text");
            builder.AddAttribute(462, "name", "pounds");
            builder.AddAttribute(463, "id", "pounds");
            builder.AddAttribute(464, "class", "form-control input-sm");
            builder.AddAttribute(465, "placeholder", "Weight");
            builder.AddAttribute(466, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Pounds));
            builder.AddAttribute(467, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Pounds = __value, SelectedUser.Pounds));
            builder.CloseElement();
            builder.AddMarkupContent(468, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(469, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(470, "\r\n                            ");
            builder.OpenElement(471, "div");
            builder.AddAttribute(472, "class", "row");
            builder.AddMarkupContent(473, "\r\n                                ");
            builder.OpenElement(474, "div");
            builder.AddAttribute(475, "class", "col-sm-6");
            builder.AddMarkupContent(476, "\r\n                                    ");
            builder.AddMarkupContent(477, "<label for=\"username\">User Name</label>\r\n                                    ");
            builder.OpenElement(478, "input");
            builder.AddAttribute(479, "type", "text");
            builder.AddAttribute(480, "name", "username");
            builder.AddAttribute(481, "id", "username");
            builder.AddAttribute(482, "class", "form-control input-sm");
            builder.AddAttribute(483, "placeholder", "User Name");
            builder.AddAttribute(484, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Username));
            builder.AddAttribute(485, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Username = __value, SelectedUser.Username));
            builder.CloseElement();
            builder.AddMarkupContent(486, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(487, "\r\n                                ");
            builder.OpenElement(488, "div");
            builder.AddAttribute(489, "class", "col-sm-6");
            builder.AddMarkupContent(490, "\r\n                                    ");
            builder.AddMarkupContent(491, "<label for=\"password\">Password</label>\r\n                                    ");
            builder.OpenElement(492, "input");
            builder.AddAttribute(493, "type", "text");
            builder.AddAttribute(494, "name", "password");
            builder.AddAttribute(495, "id", "password");
            builder.AddAttribute(496, "class", "form-control input-sm");
            builder.AddAttribute(497, "placeholder", "Password");
            builder.AddAttribute(498, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Password));
            builder.AddAttribute(499, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Password = __value, SelectedUser.Password));
            builder.CloseElement();
            builder.AddMarkupContent(500, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(501, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(502, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(503, "\r\n\r\n                        ");
            builder.OpenElement(504, "div");
            builder.AddAttribute(505, "id", "CreditData");
            builder.AddAttribute(506, "class", "tab-pane container");
            builder.AddMarkupContent(507, "\r\n                            ");
            builder.OpenElement(508, "div");
            builder.AddAttribute(509, "class", "row");
            builder.AddMarkupContent(510, "\r\n                                ");
            builder.OpenElement(511, "div");
            builder.AddAttribute(512, "class", "col-sm-6");
            builder.AddMarkupContent(513, "\r\n                                    ");
            builder.AddMarkupContent(514, "<label for=\"CCType\">Credit Card Type</label>\r\n                                    ");
            builder.OpenElement(515, "input");
            builder.AddAttribute(516, "type", "text");
            builder.AddAttribute(517, "name", "CCType");
            builder.AddAttribute(518, "id", "CCType");
            builder.AddAttribute(519, "class", "form-control input-sm");
            builder.AddAttribute(520, "placeholder", "Credit Card Type");
            builder.AddAttribute(521, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.CCType));
            builder.AddAttribute(522, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.CCType = __value, SelectedUser.CCType));
            builder.CloseElement();
            builder.AddMarkupContent(523, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(524, "\r\n                                ");
            builder.OpenElement(525, "div");
            builder.AddAttribute(526, "class", "col-sm-6");
            builder.AddMarkupContent(527, "\r\n                                    ");
            builder.AddMarkupContent(528, "<label for=\"CCNumber\">Credit Card Number</label>\r\n                                    ");
            builder.OpenElement(529, "input");
            builder.AddAttribute(530, "type", "text");
            builder.AddAttribute(531, "name", "CCNumber");
            builder.AddAttribute(532, "id", "CCNumber");
            builder.AddAttribute(533, "class", "form-control input-sm");
            builder.AddAttribute(534, "placeholder", "Credit Card Number");
            builder.AddAttribute(535, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.CCNumber));
            builder.AddAttribute(536, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.CCNumber = __value, SelectedUser.CCNumber));
            builder.CloseElement();
            builder.AddMarkupContent(537, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(538, "\r\n                                ");
            builder.OpenElement(539, "div");
            builder.AddAttribute(540, "class", "col-sm-6");
            builder.AddMarkupContent(541, "\r\n                                    ");
            builder.AddMarkupContent(542, "<label for=\"CVV2\">CVV2</label>\r\n                                    ");
            builder.OpenElement(543, "input");
            builder.AddAttribute(544, "type", "text");
            builder.AddAttribute(545, "name", "CVV2");
            builder.AddAttribute(546, "id", "CVV2");
            builder.AddAttribute(547, "class", "form-control input-sm");
            builder.AddAttribute(548, "placeholder", "CVV2");
            builder.AddAttribute(549, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.CVV2));
            builder.AddAttribute(550, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.CVV2 = __value, SelectedUser.CVV2));
            builder.CloseElement();
            builder.AddMarkupContent(551, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(552, "\r\n                                ");
            builder.OpenElement(553, "div");
            builder.AddAttribute(554, "class", "col-sm-6");
            builder.AddMarkupContent(555, "\r\n                                    ");
            builder.AddMarkupContent(556, "<label for=\"CCExpires\">CCExpires</label>\r\n                                    ");
            builder.OpenElement(557, "input");
            builder.AddAttribute(558, "type", "text");
            builder.AddAttribute(559, "name", "CCExpires");
            builder.AddAttribute(560, "id", "CCExpires");
            builder.AddAttribute(561, "class", "form-control input-sm");
            builder.AddAttribute(562, "placeholder", "CCExpires");
            builder.AddAttribute(563, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.CCExpires));
            builder.AddAttribute(564, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.CCExpires = __value, SelectedUser.CCExpires));
            builder.CloseElement();
            builder.AddMarkupContent(565, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(566, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(567, "\r\n\r\n\r\n                            ");
            builder.OpenElement(568, "div");
            builder.AddAttribute(569, "class", "row");
            builder.AddMarkupContent(570, "\r\n                                ");
            builder.OpenElement(571, "div");
            builder.AddAttribute(572, "class", "col-sm-6");
            builder.AddMarkupContent(573, "\r\n                                    ");
            builder.AddMarkupContent(574, "<label for=\"WesternUnionMTCN\">Western Union Tracking Number</label>\r\n                                    ");
            builder.OpenElement(575, "input");
            builder.AddAttribute(576, "type", "text");
            builder.AddAttribute(577, "name", "WesternUnionMTCN");
            builder.AddAttribute(578, "id", "WesternUnionMTCN");
            builder.AddAttribute(579, "class", "form-control input-sm");
            builder.AddAttribute(580, "placeholder", "Western Union Tracking Number");
            builder.AddAttribute(581, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.WesternUnionMTCN));
            builder.AddAttribute(582, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.WesternUnionMTCN = __value, SelectedUser.WesternUnionMTCN));
            builder.CloseElement();
            builder.AddMarkupContent(583, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(584, "\r\n                                ");
            builder.OpenElement(585, "div");
            builder.AddAttribute(586, "class", "col-sm-6");
            builder.AddMarkupContent(587, "\r\n                                    ");
            builder.AddMarkupContent(588, "<label for=\"MoneyGramMTCN\">MoneyGram Tracking Number</label>\r\n                                    ");
            builder.OpenElement(589, "input");
            builder.AddAttribute(590, "type", "text");
            builder.AddAttribute(591, "name", "MoneyGramMTCN");
            builder.AddAttribute(592, "id", "MoneyGramMTCN");
            builder.AddAttribute(593, "class", "form-control input-sm");
            builder.AddAttribute(594, "placeholder", "MoneyGram Tracking Number");
            builder.AddAttribute(595, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.MoneyGramMTCN));
            builder.AddAttribute(596, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.MoneyGramMTCN = __value, SelectedUser.MoneyGramMTCN));
            builder.CloseElement();
            builder.AddMarkupContent(597, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(598, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(599, "\r\n\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(600, "\r\n\r\n                        ");
            builder.OpenElement(601, "div");
            builder.AddAttribute(602, "id", "Employment");
            builder.AddAttribute(603, "class", "tab-pane container");
            builder.AddMarkupContent(604, "\r\n                            ");
            builder.OpenElement(605, "div");
            builder.AddAttribute(606, "class", "row");
            builder.AddMarkupContent(607, "\r\n                                ");
            builder.OpenElement(608, "div");
            builder.AddAttribute(609, "class", "col-sm-6");
            builder.AddMarkupContent(610, "\r\n                                    ");
            builder.AddMarkupContent(611, "<label for=\"company\">Company</label>\r\n                                    ");
            builder.OpenElement(612, "input");
            builder.AddAttribute(613, "type", "text");
            builder.AddAttribute(614, "name", "company");
            builder.AddAttribute(615, "id", "company");
            builder.AddAttribute(616, "class", "form-control input-sm");
            builder.AddAttribute(617, "placeholder", "Company");
            builder.AddAttribute(618, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Company));
            builder.AddAttribute(619, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Company = __value, SelectedUser.Company));
            builder.CloseElement();
            builder.AddMarkupContent(620, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(621, "\r\n                                ");
            builder.OpenElement(622, "div");
            builder.AddAttribute(623, "class", "col-sm-6");
            builder.AddMarkupContent(624, "\r\n                                    ");
            builder.AddMarkupContent(625, "<label for=\"occupation\">Occupation</label>\r\n                                    ");
            builder.OpenElement(626, "input");
            builder.AddAttribute(627, "type", "text");
            builder.AddAttribute(628, "name", "occupation");
            builder.AddAttribute(629, "id", "occupation");
            builder.AddAttribute(630, "class", "form-control input-sm");
            builder.AddAttribute(631, "placeholder", "Occupation");
            builder.AddAttribute(632, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Occupation));
            builder.AddAttribute(633, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Occupation = __value, SelectedUser.Occupation));
            builder.CloseElement();
            builder.AddMarkupContent(634, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(635, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(636, "\r\n                            ");
            builder.OpenElement(637, "div");
            builder.AddAttribute(638, "class", "row");
            builder.AddMarkupContent(639, "\r\n                                ");
            builder.OpenElement(640, "div");
            builder.AddAttribute(641, "class", "col-sm-6");
            builder.AddMarkupContent(642, "\r\n                                    ");
            builder.AddMarkupContent(643, "<label for=\"vehicle\">Vehicle</label>\r\n                                    ");
            builder.OpenElement(644, "input");
            builder.AddAttribute(645, "type", "text");
            builder.AddAttribute(646, "name", "vehicle");
            builder.AddAttribute(647, "id", "vehicle");
            builder.AddAttribute(648, "class", "form-control input-sm");
            builder.AddAttribute(649, "placeholder", "Vehicle");
            builder.AddAttribute(650, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Vehicle));
            builder.AddAttribute(651, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Vehicle = __value, SelectedUser.Vehicle));
            builder.CloseElement();
            builder.AddMarkupContent(652, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(653, "\r\n                                ");
            builder.OpenElement(654, "div");
            builder.AddAttribute(655, "class", "col-sm-6");
            builder.AddMarkupContent(656, "\r\n                                    ");
            builder.AddMarkupContent(657, "<label for=\"color\">Vehicle Color</label>\r\n                                    ");
            builder.OpenElement(658, "input");
            builder.AddAttribute(659, "type", "text");
            builder.AddAttribute(660, "name", "color");
            builder.AddAttribute(661, "id", "color");
            builder.AddAttribute(662, "class", "form-control input-sm");
            builder.AddAttribute(663, "placeholder", "Vehicle Color");
            builder.AddAttribute(664, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(SelectedUser.Color));
            builder.AddAttribute(665, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => SelectedUser.Color = __value, SelectedUser.Color));
            builder.CloseElement();
            builder.AddMarkupContent(666, "\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(667, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(668, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(669, "\r\n                        ");
            builder.AddMarkupContent(670, @"<div id=""mapDisplay"" class=""tab-pane container"">
                            <label>The Street is correct but the House / Apartment number is random!</label>
                            <div id=""map"" class=""map""></div>
                        </div>
                    ");
            builder.CloseElement();
            builder.AddMarkupContent(671, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(672, "\r\n                ");
            builder.OpenElement(673, "div");
            builder.AddAttribute(674, "class", "modal-footer");
            builder.AddMarkupContent(675, "\r\n                    ");
            builder.OpenElement(676, "button");
            builder.AddAttribute(677, "type", "button");
            builder.AddAttribute(678, "class", "btn btn-danger");
            builder.AddAttribute(679, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => CancelSaveUser(SelectedUser)));
            builder.AddAttribute(680, "data-dismiss", "modal");
            builder.AddContent(681, "Cancel");
            builder.CloseElement();
            builder.AddMarkupContent(682, "\r\n                    ");
            builder.OpenElement(683, "button");
            builder.AddAttribute(684, "type", "button");
            builder.AddAttribute(685, "class", "btn btn-primary");
            builder.AddAttribute(686, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => SaveUser(SelectedUser)));
            builder.AddContent(687, "Save changes");
            builder.CloseElement();
            builder.AddMarkupContent(688, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(689, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(690, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(691, "\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(692, "\r\n");
            builder.CloseElement();
            builder.AddMarkupContent(693, "\r\n");
#line 272 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
    }

#line default
#line hidden
            builder.OpenElement(694, "div");
            builder.AddAttribute(695, "class", "container mt-sm-4");
            builder.AddMarkupContent(696, "\r\n    ");
            builder.OpenElement(697, "div");
            builder.AddAttribute(698, "class", "modal");
            builder.AddAttribute(699, "id", "searchError");
            builder.AddMarkupContent(700, "\r\n        ");
            builder.OpenElement(701, "div");
            builder.AddAttribute(702, "class", "modal-dialog modal-sm modal-dialog");
            builder.AddMarkupContent(703, "\r\n            ");
            builder.OpenElement(704, "div");
            builder.AddAttribute(705, "class", "modal-content");
            builder.AddMarkupContent(706, "\r\n                ");
            builder.OpenElement(707, "div");
            builder.AddAttribute(708, "class", "modal-header");
            builder.AddAttribute(709, "style", "background-color:lightgray;");
            builder.AddMarkupContent(710, "\r\n                    ");
            builder.AddMarkupContent(711, "<h11 id=\"modalTitle\" class=\"modal-title\">Search Error </h11>\r\n                    ");
            builder.OpenElement(712, "button");
            builder.AddAttribute(713, "type", "button");
            builder.AddAttribute(714, "aria-label", "Close");
            builder.AddAttribute(715, "class", "close");
            builder.AddAttribute(716, "data-dismiss", "modal");
            builder.AddAttribute(717, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => CancelSaveUser(SelectedUser)));
            builder.AddMarkupContent(718, "\r\n                        ");
            builder.AddMarkupContent(719, "<span aria-hidden=\"true\">&times;</span>\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(720, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(721, "\r\n                ");
            builder.OpenElement(722, "div");
            builder.AddAttribute(723, "class", "modal-body");
            builder.AddMarkupContent(724, "\r\n                    ");
            builder.OpenElement(725, "b");
            builder.AddContent(726, SearchErrorText);
            builder.CloseElement();
            builder.AddMarkupContent(727, " was Not Found\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(728, "\r\n                ");
            builder.OpenElement(729, "div");
            builder.AddAttribute(730, "class", "modal-footer");
            builder.AddMarkupContent(731, "\r\n                    ");
            builder.OpenElement(732, "button");
            builder.AddAttribute(733, "type", "button");
            builder.AddAttribute(734, "class", "btn btn-primary");
            builder.AddAttribute(735, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this,  () => CloseModal()));
            builder.AddAttribute(736, "data-dismiss", "modal");
            builder.AddContent(737, "OK");
            builder.CloseElement();
            builder.AddMarkupContent(738, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(739, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(740, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(741, "\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(742, "\r\n    ");
            builder.OpenElement(743, "div");
            builder.AddMarkupContent(744, "\r\n        ");
            builder.OpenElement(745, "div");
            builder.AddMarkupContent(746, "\r\n            ");
            builder.OpenComponent<BlazorTest.Pages.Gender>(747);
            builder.AddAttribute(748, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddMarkupContent(749, "\r\n                MaleCountString=\"");
                builder2.AddContent(750, MaleCount);
                builder2.AddMarkupContent(751, "\"\r\n                FemaleCountString=\"");
                builder2.AddContent(752, FemaleCount);
                builder2.AddMarkupContent(753, "\"\r\n            ");
            }
            ));
            builder.AddComponentReferenceCapture(754, (__value) => {
#line 294 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                         GenderComponent = (BlazorTest.Pages.Gender)__value;

#line default
#line hidden
            }
            );
            builder.CloseComponent();
            builder.AddMarkupContent(755, "\r\n            ");
            builder.OpenComponent<BlazorTest.Pages.BloodType>(756);
            builder.AddAttribute(757, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddMarkupContent(758, "\r\n                MaleBloodTypes=");
                builder2.AddContent(759, maleBloodTypes);
                builder2.AddMarkupContent(760, "\r\n                FemaleBloodTypes=");
                builder2.AddContent(761, femaleBloodTypes);
                builder2.AddMarkupContent(762, "\r\n            ");
            }
            ));
            builder.AddComponentReferenceCapture(763, (__value) => {
#line 298 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                            BloodTypeComponent = (BlazorTest.Pages.BloodType)__value;

#line default
#line hidden
            }
            );
            builder.CloseComponent();
            builder.AddMarkupContent(764, "\r\n            ");
            builder.OpenComponent<BlazorTest.Pages.CreditCard>(765);
            builder.AddAttribute(766, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((builder2) => {
                builder2.AddMarkupContent(767, "\r\n                MaleCardTypes=");
                builder2.AddContent(768, maleCardTypes);
                builder2.AddMarkupContent(769, "\r\n                FemaleCardTypes=");
                builder2.AddContent(770, femaleCardTypes);
                builder2.AddMarkupContent(771, "\r\n            ");
            }
            ));
            builder.AddComponentReferenceCapture(772, (__value) => {
#line 302 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
                             CreditCardComponent = (BlazorTest.Pages.CreditCard)__value;

#line default
#line hidden
            }
            );
            builder.CloseComponent();
            builder.AddMarkupContent(773, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(774, "\r\n    ");
            builder.CloseElement();
            builder.AddMarkupContent(775, "\r\n    \r\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 311 "C:\Develop\GitHub\BlazorTest\Pages\DataGrid.razor"
            
    private Gender GenderComponent = new Gender();
    private BloodType BloodTypeComponent = new BloodType();
    private CreditCard CreditCardComponent = new CreditCard();

    [Parameter] EventCallback<string> OnSortLinkClicked { get; set; }
    [Parameter] EventCallback<string> OnSearchError { get; set; }
    [Parameter] EventCallback<string> OnUserCount { get; set; }
    [Parameter] EventCallback<string> OnSearchText { get; set; }

    List<BloodType.BloodTypes> femaleBloodTypes = new List<BloodType.BloodTypes>();
    List<BloodType.BloodTypes> maleBloodTypes = new List<BloodType.BloodTypes>();

    List<CreditCard.CardTypes> maleCardTypes = new List<CreditCard.CardTypes>();
    List<CreditCard.CardTypes> femaleCardTypes = new List<CreditCard.CardTypes>();

    private int currentPage  { get; set; } = 1;
    private int pageSize = 12;

    private List<User> users = new List<User>();
    private List<User> displayUsers = new List<User>();
    private List<User> displayUsersSource = new List<User>();
    private User UnModifiedUser = new User();
    private User SelectedUser = new User();

    private bool SortDesc { get; set; }
    private string SurnameSort { get; set; }
    private string GivenNameSort { get; set; }
    private string StreetAddressSort { get; set; }
    private string CitySort { get; set; }
    private string StateSort { get; set; }
    private string ZipCodeSort { get; set; }
    private string TelephoneNumberSort { get; set; }
    private string SearchErrorText { get; set; }
    private string LoaderDisplayType { get; set; } = "block;";
    private int TotalPages { get; set; }

    public string MaleCount { get; set; } = "0";
    public string FemaleCount { get; set; } = "0";

    private int _namesCount = 0;
    public int namesCount
    {
        get { return _namesCount; }
        set
        {
            if (value != 0)
            {
                ToggleSpinner(true);

                if (value != _namesCount)
                {
                    OnUserCount.InvokeAsync(value.ToString());
                }
                _namesCount = value;
                ToggleSpinner(false);
            }
        }
    }
    private List<int> btnlist = new List<int>();

    public string _SearchString { get; set; }
    [Parameter]
    public string SearchString
    {
        get { return _SearchString; }
        set
        {
            if (value != null)
            {
                _SearchString = value;
                SearchData(value);
            }
        }
    }

    public string _SortField { get; set; } = "Surname";
    [Parameter]
    public string SortField
    {
        get { return _SortField; }
        set
        {
            if (value != "" && value != null && users.Count > 0)
            {
                _SortField = value;
                SortData(value);
            }
        }
    }
    private int checkPageInt(int iCount)
    {
        int intReturn = -1;
        int[] tmpCount = new int[] {10, 20, 30, 40,50,60,70,80,100,200,500,750,1000,1500};
        foreach (var item in tmpCount)
        {
            if (item == iCount)
            {
                intReturn = iCount;
                break;
            }
        }
        return intReturn;
    }


    protected override void OnInit()
    {
        SortDesc = true;
        ToggleSpinner(true);

    }
    protected override void OnAfterRender()
    {
        if (users.Count == 0)
        {
            users = UserService.GetNamesData(SortField == "" ? "Surname" : SortField, SortDesc);
            ShowBloodCount("users");
            ShowGenderCount("users");
            ShowCardCount("users");
            SortLinkClicked("Surname");



            ToggleSpinner(false);
        }
    }
    private void ShowBloodCount(string szSender)
    {
        if (szSender == "users")
        {
            BloodTypeComponent.FemaleBloodTypes = UserService.users.Where(x => x.Gender.ToLower() == "female")
                .GroupBy(x => x.BloodType)
                .Select(r => new BloodType.BloodTypes
                {
                    BloodType = r.Key,
                    BloodTypeTotalCount = r.Count()
                }).OrderBy(r=>r.BloodType).ToList();

            BloodTypeComponent.MaleBloodTypes = UserService.users.Where(x => x.Gender.ToLower() == "male")
                .GroupBy(x => x.BloodType)
                .Select(r => new BloodType.BloodTypes
                {
                    BloodType = r.Key,
                    BloodTypeTotalCount = r.Count()
                }).OrderBy(r=>r.BloodType).ToList();
        }
        else
        {
            BloodTypeComponent.FemaleBloodTypes = displayUsersSource.Where(x => x.Gender.ToLower() == "female")
                .GroupBy(x => x.BloodType)
                .Select(r => new BloodType.BloodTypes
                {
                    BloodType = r.Key,
                    BloodTypeTotalCount = r.Count()
                }).OrderBy(r=>r.BloodType).ToList();

            BloodTypeComponent.MaleBloodTypes = displayUsersSource.Where(x => x.Gender.ToLower() == "male")
                .GroupBy(x => x.BloodType)
                .Select(r => new BloodType.BloodTypes
                {
                    BloodType = r.Key,
                    BloodTypeTotalCount = r.Count()
                }).OrderBy(r=>r.BloodType).ToList();
        }
        ShouldRender();
    }
    private void ShowGenderCount (string szSender)
    {
        if (szSender == "users")
        {
            GenderComponent.FemaleCountString = UserService.users.Where(x => x.Gender.ToLower() == "female").Count().ToString();
            GenderComponent.MaleCountString = UserService.users.Where(x => x.Gender.ToLower() == "male").Count().ToString();
            ShowBloodCount("users");
            ShowCardCount("users");
        }
        else
        {
            GenderComponent.FemaleCountString = displayUsersSource.Where(x => x.Gender.ToLower() == "female").Count().ToString();
            GenderComponent.MaleCountString = displayUsersSource.Where(x => x.Gender.ToLower() == "male").Count().ToString();
            ShowBloodCount("displayUsers");
            ShowCardCount("displayUsers");
        }
        ShouldRender();
    }
    private void ShowCardCount(string szSender)
    {
        if (szSender == "users")
        {
            CreditCardComponent.FemaleCardTypes = UserService.users.Where(x => x.Gender.ToLower() == "female")
                .GroupBy(x => x.CCType)
                .Select(r => new CreditCard.CardTypes
                {
                    CardType = r.Key,
                    CardTypeTotalCount = r.Count()
                }).OrderBy(r=>r.CardType).ToList();

            CreditCardComponent.MaleCardTypes = UserService.users.Where(x => x.Gender.ToLower() == "male")
                .GroupBy(x => x.CCType)
                .Select(r => new CreditCard.CardTypes
                {
                    CardType = r.Key,
                    CardTypeTotalCount = r.Count()
                }).OrderBy(r=>r.CardType).ToList();
        }
        else
        {
            CreditCardComponent.FemaleCardTypes = displayUsersSource.Where(x => x.Gender.ToLower() == "female")
                .GroupBy(x => x.CCType)
                .Select(r => new CreditCard.CardTypes
                {
                    CardType = r.Key,
                    CardTypeTotalCount = r.Count()
                }).OrderBy(r=>r.CardType).ToList();

            CreditCardComponent.MaleCardTypes = displayUsersSource.Where(x => x.Gender.ToLower() == "male")
                .GroupBy(x => x.CCType)
                .Select(r => new CreditCard.CardTypes
                {
                    CardType = r.Key,
                    CardTypeTotalCount = r.Count()
                }).OrderBy(r=>r.CardType).ToList();
        }
        ShouldRender();
    }
    private void ForceRecordCountChange(string RecordsToChange)
    {
        ToggleSpinner(true);
        displayUsersSource.Clear();
        users.Clear();

        //users = UserService.GetNamesData(SortField = SortField == null ? "Number" : SortField, SortDesc);
        users = UserService.users;
        namesCount = users.Count;

        displayUsers = UserService.users.OrderByDescending(s => s.GetType()
        .GetProperty(SortField)
        .GetValue(s))
        .Skip((currentPage - 1) * pageSize)
        .Take(pageSize).ToList();
        recalcPageButtons(users.Count);
        ShowGenderCount("users");
        ToggleSpinner(false);
    }

    private string ToggleSpinner(bool spinnerOn)
    {
        LoaderDisplayType = (spinnerOn) ? "block;" : "none;";
        return LoaderDisplayType;
    }
    void ChangePage(int newPage)
    {
        currentPage = newPage;
        if (SearchString == "" || SearchString == null)
        {
            SortData(SortField);
        }
        else
        {
            SearchData(SearchString);
            SortData(SortField);
        }

    }

    void SortLinkClicked(string dataToSend)
    {
        ToggleSpinner(true);
        SortDesc = !SortDesc;
        OnSortLinkClicked.InvokeAsync(dataToSend);
        //ShowGenderCount("users");
        ToggleSpinner(false);
    }

    async Task SearchError()
    {
        await Task.FromResult(
            OnSearchError.InvokeAsync(SearchErrorText));
        SearchString = "";
    }
    async Task UserCountUpdate(int myCount)
    {
        await Task.FromResult
            (
                OnUserCount.InvokeAsync(myCount.ToString())
            );
    }

    public void SortData(string SortField)
    {
        ToggleSpinner(true);
        if (UserService.users.Count > 0 && (SearchString == "" || SearchString == null))
        {
            ToggleSpinner(true);
            CalcIconDirection(SortField);

            if (SortDesc)
            {
                displayUsers = UserService.users
                .OrderByDescending(x => x.GetType().GetProperty(SortField).GetValue(x)
                .ToString())
                .Skip((currentPage - 1) * pageSize)
                .Take(pageSize)
                .ToList();
            }
            else
            {
                displayUsers = UserService.users
                .OrderBy(x => x.GetType().GetProperty(SortField).GetValue(x)
                .ToString())
                .Skip((currentPage - 1) * pageSize)
                .Take(pageSize)
                .ToList();
            }
            displayUsersSource = UserService.users
                .OrderBy(x => x.GetType().GetProperty(SortField).GetValue(x)
                .ToString())
                .ToList();
        }
        if (SearchString != "" && SearchString != null)
        {
            namesCount = UserService.users.Where(s => s.GetType()
                    .GetProperty(SortField).GetValue(s).ToString().ToLower()
                    .StartsWith(SearchString.ToLower())).Count();
            recalcPageButtons(namesCount);
        }
        if ((SearchString == "" || SearchString == null) && users.Count > 0)
        {
            recalcPageButtons(UserService.users.Count);
            namesCount = users.Count;
        }

        ToggleSpinner(false);

    }
    public async Task ShowError(string errMessage)
    {
        await Task.FromResult(JSRuntime.InvokeAsync<string>(
                     "appFunctions.showModal", "searchError", "Search Text: " +
                     SearchString + " was not found"));

    }
    public List<int> recalcPageButtons(int TotalRecords)
    {
        int _myCount = 0;
        if (TotalRecords > 0)
        {
            _myCount = TotalRecords > 0 ? (int)Math.Ceiling(decimal.Divide(TotalRecords, pageSize)) : 0;
            btnlist.Clear();
            for (int i = 1; i < _myCount + 1; i++)
            {
                btnlist.Add(i);
            }
        }
        return btnlist;
    }
    public void SearchData(string SearchString)
    {
        int displayCount = 0;
        if (users.Count > 0)
        {
            ToggleSpinner(true);
            CalcIconDirection(SortField);

            if (SearchString.Length > 0)
            {
                //currentPage = 1;
                if (SortDesc)
                {
                    List<User> tmp = UserService.users.Where(s => s.GetType()
                    .GetProperty(SortField).GetValue(s).ToString().ToLower()
                    .StartsWith(SearchString.ToLower()))
                    .OrderByDescending(x => x.GetType()
                    .GetProperty(SortField).GetValue(x)).ToList();
                    if (tmp.Count > 0)
                    {
                        if ((currentPage - 1) * pageSize < tmp.Count())
                        {
                            displayUsers = tmp.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
                        }
                        else
                        {
                            currentPage = 1;
                            displayUsers = tmp.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
                        }
                    }
                }
                else
                {
                    List<User> tmp = UserService.users.Where(s => s.GetType()
                    .GetProperty(SortField).GetValue(s).ToString().ToLower()
                    .StartsWith(SearchString.ToLower()))
                    .OrderBy(x => x.GetType()
                    .GetProperty(SortField).GetValue(x)).ToList();
                    if (tmp.Count > 0)
                    {
                        if ((currentPage - 1) * pageSize < tmp.Count())
                        {
                            displayUsers = tmp.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
                        }
                        else
                        {
                            currentPage = 1;
                            displayUsers = tmp.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
                        }
                    }
                }
                displayUsersSource = UserService.users.Where(s => s.GetType()
                    .GetProperty(SortField).GetValue(s).ToString().ToLower()
                    .StartsWith(SearchString.ToLower()))
                    .OrderBy(x => x.GetType()
                    .GetProperty(SortField).GetValue(x)).ToList();

                namesCount = displayUsersSource.Count;
                displayCount = displayUsersSource.Count();

                ShowBloodCount("displayUsers");
                ShowGenderCount("displayUsers");
                ShowCardCount("displayUsers");
            }
            if (SearchString.Length == 0)
            {
                if (SortDesc)
                {
                    displayUsers = UserService.users
                    .OrderByDescending(x => x.GetType().GetProperty(SortField).GetValue(x)
                    .ToString())
                    .Skip((currentPage - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();
                }
                else
                {
                    displayUsers = UserService.users
                    .OrderBy(x => x.GetType().GetProperty(SortField).GetValue(x)
                    .ToString())
                    .Skip((currentPage - 1) * pageSize)
                    .Take(pageSize)
                    .ToList();
                }
                displayCount = UserService.users.Count;
                namesCount = displayCount;
                ShowBloodCount("displayUsers");
                ShowGenderCount("displayUsers");
                ShowCardCount("displayUsers");
            }
        }
        recalcPageButtons(displayCount);
        ToggleSpinner(false);
    }
    static string OrderCheck(bool SortDesc)
    {
        if (SortDesc)
        {
            return "oi oi-arrow-thick-bottom";
        }
        else
        {
            return "oi oi-arrow-thick-top";
        }
    }
    private string CalcIconDirection(string SortField)
    {
        SurnameSort = SortField != "Surname" ? "" : SurnameSort;
        GivenNameSort = SortField != "GivenName" ? "" : GivenNameSort;
        StreetAddressSort = SortField != "StreetAddress" ? "" : StreetAddressSort;
        CitySort = SortField != "City" ? "" : CitySort;
        StateSort = SortField != "State" ? "" : StateSort;
        TelephoneNumberSort = SortField != "TelephoneNumber" ? "" : TelephoneNumberSort;
        ZipCodeSort = SortField != "ZipCode" ? "" : ZipCodeSort;

        switch (SortField)
        {
            case "Surname":
                SurnameSort = OrderCheck(SortDesc);
                return SurnameSort;
            case "GivenName":
                GivenNameSort = OrderCheck(SortDesc);
                return GivenNameSort;
            case "StreetAddress":
                StreetAddressSort = OrderCheck(SortDesc);
                return StreetAddressSort;
            case "City":
                CitySort = OrderCheck(SortDesc);
                return CitySort;
            case "State":
                StateSort = OrderCheck(SortDesc);
                return StateSort;
            case "TelephoneNumber":
                TelephoneNumberSort = OrderCheck(SortDesc);
                return TelephoneNumberSort;
            case "ZipCode":
                ZipCodeSort = OrderCheck(SortDesc);
                return ZipCodeSort;
            default:
                return String.Empty;
        }

    }

    /// <summary>
    /// Modal Section
    /// </summary>
    /// <param name="myUser"></param>
    #region Modal
    private async void EditUser(User myUser)
    {
        SelectedUser = myUser;
        UnModifiedUser = Comparer.DeepCopy<User>(SelectedUser);

        await JSRuntime.InvokeAsync<string>(
                 "appFunctions.showModal", "editUserModal", "");

        ChangeTab("User");
    }
    private async void ShowMap(User SelectedUser)
    {
        string szAddress = SelectedUser.StreetAddress + " " +
            SelectedUser.City + ", " + SelectedUser.ZipCode;
        string[] CoordinateArray = new string[]
        {
            SelectedUser.Longitude.ToString(),
            SelectedUser.Latitude.ToString(),
            szAddress
        };
        await JSRuntime.InvokeAsync<string>(
                  "appFunctions.showMap", CoordinateArray);
    }
    private async void ChangeTab(string tab)
    {
        await JSRuntime.InvokeAsync<string>(
                 "appFunctions.changeTabs", tab);
        if (tab == "mapDisplay")
        {
            decimal[] CoordinateArray = new decimal[]
            {
                Convert.ToDecimal(SelectedUser.Longitude),
                Convert.ToDecimal(SelectedUser.Latitude)
                            };
            await JSRuntime.InvokeAsync<string>(
                  "appFunctions.showMap", CoordinateArray);

        }
    }
    private async Task<List<User>> SaveUser(User SelectedUser)
    {
        //await JSRuntime.InvokeAsync<string>(
        //    "appfunctions.saveConfirmation", "");

        //await JSRuntime.InvokeAsync<string>(
        //    "appFunctions.hideEditUserModal", "");

        users = await UserService.SaveUserAsync(SortField, SortDesc, users, SelectedUser);

        await JSRuntime.InvokeAsync<string>(
                "appFunctions.hideModal", "editUserModal");

        //ToggleSpinner(false);
        return users;
    }
    private void CloseModal()
    {
        JSRuntime.InvokeAsync<string>(
            "appFunctions.hideModal", "searchError");
    }
    private async Task<List<User>> CancelSaveUser(User SelectedUser)
    {
        if (!Comparer.DeepCompare(SelectedUser, UnModifiedUser))
        {
            users = await UserService.SaveUserAsync(SortField, SortDesc, users, UnModifiedUser);
        }


        SelectedUser = null;
        UnModifiedUser = null;

        await JSRuntime.InvokeAsync<string>(
            "appFunctions.hideModal", "EditUserModal");

        //ToggleSpinner(false);
        return users;
    }
    #endregion

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserService UserService { get; set; }
    }
}
#pragma warning restore 1591
