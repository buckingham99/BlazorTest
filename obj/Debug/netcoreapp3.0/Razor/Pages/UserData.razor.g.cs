#pragma checksum "C:\Develop\GitHub\BlazorTest\Pages\UserData.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d393d4e535efd0832b89ad37e4760a9cf0bdba86"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorTest.Pages
{
    #line hidden
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTest.Shared;
    using BlazorTest.Models;
    using BlazorTest.Services;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/userdata")]
    public class UserData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "div");
            builder.AddAttribute(1, "class", "container");
            builder.AddMarkupContent(2, "\r\n        ");
            builder.AddMarkupContent(3, @"<div class=""row"">
            <h3>Test User Data Page</h3>
            <p>This component demonstrates fetching & editing data from a service via local CSV or JSON file using a HTML Grid.</p>
            <p>Click on a user to edit data and view an OpenLayers Map of their location. </p>
            <p>
                Please note that your data will not be persisted between sessions, but a Database can easily be attached
                to the UserService Class.
            </p>
        </div>
        ");
            builder.OpenElement(4, "div");
            builder.AddAttribute(5, "class", "container");
            builder.AddAttribute(6, "style", "border: 1px solid black;");
            builder.AddMarkupContent(7, "\r\n            ");
            builder.OpenElement(8, "div");
            builder.AddAttribute(9, "class", "container");
            builder.AddMarkupContent(10, "\r\n                ");
            builder.OpenElement(11, "div");
            builder.AddAttribute(12, "class", "row");
            builder.AddMarkupContent(13, "\r\n                    ");
            builder.AddMarkupContent(14, "<h5>Parent Component</h5> &nbsp; &nbsp; ");
            builder.OpenElement(15, "label");
            builder.AddContent(16, "  UserCount = ");
            builder.AddContent(17, UsersCount);
            builder.AddContent(18, " ");
            builder.CloseElement();
            builder.AddMarkupContent(19, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(20, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(21, "\r\n            ");
            builder.OpenElement(22, "div");
            builder.AddAttribute(23, "class", "row");
            builder.AddMarkupContent(24, "\r\n                ");
            builder.OpenElement(25, "div");
            builder.AddAttribute(26, "class", "input-group input-group-md");
            builder.AddAttribute(27, "style", "line-height: 0.5");
            builder.AddMarkupContent(28, "\r\n                    ");
            builder.OpenElement(29, "form");
            builder.AddAttribute(30, "class", "form-group");
            builder.AddMarkupContent(31, "\r\n                        ");
            builder.OpenElement(32, "div");
            builder.AddAttribute(33, "class", "input-group-sm");
            builder.AddMarkupContent(34, "\r\n                            ");
            builder.OpenElement(35, "input");
            builder.AddAttribute(36, "type", "search");
            builder.AddAttribute(37, "class", "form-control form-control-sm");
            builder.AddAttribute(38, "id", "SearchText");
            builder.AddAttribute(39, "name", "SearchText");
            builder.AddAttribute(40, "aria-label", "search");
            builder.AddAttribute(41, "aria-describedby", "basic-addon1");
            builder.AddAttribute(42, "placeholder", PlaceHolderSort);
            builder.AddAttribute(43, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(ParentSearch));
            builder.AddAttribute(44, "oninput", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => ParentSearch = __value, ParentSearch));
            builder.CloseElement();
            builder.AddMarkupContent(45, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(46, "\r\n                        ");
            builder.AddMarkupContent(47, "<div>\r\n                            <br>\r\n                        </div>\r\n                        ");
            builder.OpenElement(48, "div");
            builder.AddAttribute(49, "class", "input-group-sm");
            builder.AddMarkupContent(50, "\r\n                            ");
            builder.OpenElement(51, "fieldset");
            builder.AddMarkupContent(52, "\r\n                                ");
            builder.OpenElement(53, "div");
            builder.AddAttribute(54, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(55, "\r\n                                    ");
            builder.OpenElement(56, "input");
            builder.AddAttribute(57, "type", "radio");
            builder.AddAttribute(58, "id", "lastName");
            builder.AddAttribute(59, "name", "searchGroup");
            builder.AddAttribute(60, "checked", SurnameChecked == 1);
            builder.AddAttribute(61, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "Surname"));
            builder.CloseElement();
            builder.AddMarkupContent(62, "\r\n                                    ");
            builder.AddMarkupContent(63, "<label class=\"radio-inline\" for=\"lastName\">Last Name</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(64, "\r\n                                ");
            builder.OpenElement(65, "div");
            builder.AddAttribute(66, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(67, "\r\n                                    ");
            builder.OpenElement(68, "input");
            builder.AddAttribute(69, "type", "radio");
            builder.AddAttribute(70, "id", "givenName");
            builder.AddAttribute(71, "name", "searchGroup");
            builder.AddAttribute(72, "checked", GivenNameChecked == 1);
            builder.AddAttribute(73, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "GivenName"));
            builder.CloseElement();
            builder.AddMarkupContent(74, "\r\n                                    ");
            builder.AddMarkupContent(75, "<label class=\"radio-inline\" for=\"givenName\">First Name</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(76, "\r\n                                ");
            builder.OpenElement(77, "div");
            builder.AddAttribute(78, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(79, "\r\n                                    ");
            builder.OpenElement(80, "input");
            builder.AddAttribute(81, "type", "radio");
            builder.AddAttribute(82, "id", "address");
            builder.AddAttribute(83, "name", "searchGroup");
            builder.AddAttribute(84, "checked", StreetAddressChecked == 1);
            builder.AddAttribute(85, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "StreetAddress"));
            builder.CloseElement();
            builder.AddMarkupContent(86, "\r\n                                    ");
            builder.AddMarkupContent(87, "<label class=\"radio-inline\" for=\"address\">Address</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(88, "\r\n                                ");
            builder.OpenElement(89, "div");
            builder.AddAttribute(90, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(91, "\r\n                                    ");
            builder.OpenElement(92, "input");
            builder.AddAttribute(93, "type", "radio");
            builder.AddAttribute(94, "id", "city");
            builder.AddAttribute(95, "name", "searchGroup");
            builder.AddAttribute(96, "checked", CityChecked == 1);
            builder.AddAttribute(97, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "City"));
            builder.CloseElement();
            builder.AddMarkupContent(98, "\r\n                                    ");
            builder.AddMarkupContent(99, "<label class=\"radio-inline\" for=\"city\">City</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(100, "\r\n                                ");
            builder.OpenElement(101, "div");
            builder.AddAttribute(102, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(103, "\r\n                                    ");
            builder.OpenElement(104, "input");
            builder.AddAttribute(105, "type", "radio");
            builder.AddAttribute(106, "id", "state");
            builder.AddAttribute(107, "name", "searchGroup");
            builder.AddAttribute(108, "checked", StateChecked == 1);
            builder.AddAttribute(109, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "State"));
            builder.CloseElement();
            builder.AddMarkupContent(110, "\r\n                                    ");
            builder.AddMarkupContent(111, "<label class=\"radio-inline\" for=\"state\">State</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(112, "\r\n                                ");
            builder.OpenElement(113, "div");
            builder.AddAttribute(114, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(115, "\r\n                                    ");
            builder.OpenElement(116, "input");
            builder.AddAttribute(117, "type", "radio");
            builder.AddAttribute(118, "id", "zip");
            builder.AddAttribute(119, "name", "searchGroup");
            builder.AddAttribute(120, "checked", ZipCodeChecked == 1);
            builder.AddAttribute(121, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "ZipCode"));
            builder.CloseElement();
            builder.AddMarkupContent(122, "\r\n                                    ");
            builder.AddMarkupContent(123, "<label class=\"radio-inline\" for=\"zip\">Zip Code</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(124, "\r\n                                ");
            builder.OpenElement(125, "div");
            builder.AddAttribute(126, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(127, "\r\n                                    ");
            builder.OpenElement(128, "input");
            builder.AddAttribute(129, "type", "radio");
            builder.AddAttribute(130, "id", "phone");
            builder.AddAttribute(131, "name", "searchGroup");
            builder.AddAttribute(132, "checked", TelephoneNumberChecked == 1);
            builder.AddAttribute(133, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "TelephoneNumber"));
            builder.CloseElement();
            builder.AddMarkupContent(134, "\r\n                                    ");
            builder.AddMarkupContent(135, "<label class=\"radio-inline\" for=\"phone\">Phone</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(136, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(137, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(138, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(139, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(140, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(141, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(142, "\r\n        <div class=\"row\"></div>\r\n        ");
            builder.OpenComponent<BlazorTest.Pages.DataGrid>(143);
            builder.AddAttribute(144, "SortField", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.String>(_ParentSort));
            builder.AddAttribute(145, "OnSortLinkClicked", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, OnSortClick)));
            builder.AddAttribute(146, "OnSearchError", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, SearchErrorClear)));
            builder.AddAttribute(147, "OnUserCount", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, UserCountChange)));
            builder.AddAttribute(148, "SearchString", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.String>(_ParentSearch));
            builder.CloseComponent();
            builder.AddMarkupContent(149, "\r\n    ");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 92 "C:\Develop\GitHub\BlazorTest\Pages\UserData.razor"
                

        private int SurnameChecked { get; set; }
        private int GivenNameChecked { get; set; }
        private int StreetAddressChecked { get; set; }
        private int CityChecked { get; set; }
        private int StateChecked { get; set; }
        private int ZipCodeChecked { get; set; }
        private int TelephoneNumberChecked { get; set; }

        private string newSort  { get; set; }
        public int UsersCount { get; set; }
        public string PlaceHolderSort { get; set; } = "Search Last Name ...";


        public string _ParentSort { get; set; } = "Surname";

        public string ParentSort
        {
            get { return _ParentSort; }
            set
            {
                if (value != null)
                {
                    _ParentSort = value;
                    ChangeSearchPlaceHolder();
                    ClickListButton(value);
                    SortChildComponent();
                }
            }
        }
        public string _ParentSearch { get; set; }
        public string ParentSearch
        {
            get { return _ParentSearch; }
            set
            {
                _ParentSearch = value;
                SearchChildComponent();
            }
        }
        public string SortChildComponent()
        {
            return _ParentSort;
        }
        public string SearchChildComponent()
        {
            return _ParentSearch;
        }
        public string ChangeSearchPlaceHolder()
        {
            switch (_ParentSort)
            {
                case "Surname":
                    PlaceHolderSort = "Search Last Name ...";
                    break;
                case "GivenName":
                    PlaceHolderSort = "Search First Name ...";
                    break;
                case "StreetAddress":
                    PlaceHolderSort = "Search Address ...";
                    break;
                case "City":
                    PlaceHolderSort = "Search City ...";
                    break;
                case "State":
                    PlaceHolderSort = "Search State ...";
                    break;
                case "ZipCode":
                    PlaceHolderSort = "Search Zip Code ...";
                    break;
                case "TelephoneNumber":
                    PlaceHolderSort = "Search Telephone Number ...";
                    break;
                default:
                    break;
            }
            return PlaceHolderSort;

        }
        private int ClickListButton(string returnedString)
        {
            SurnameChecked = 0;
            GivenNameChecked = 0;
            StreetAddressChecked = 0;
            CityChecked = 0;
            StateChecked = 0;
            TelephoneNumberChecked = 0;
            ZipCodeChecked = 0;

            switch (returnedString)
            {
                case "Surname":
                    SurnameChecked = 1;
                    return SurnameChecked;
                case "GivenName":
                    GivenNameChecked = 1;
                    return GivenNameChecked;
                case "StreetAddress":
                    StreetAddressChecked = 1;
                    return StreetAddressChecked;
                case "City":
                    CityChecked = 1;
                    return CityChecked;
                case "State":
                    StateChecked = 1;
                    return StateChecked;
                case "TelephoneNumber":
                    TelephoneNumberChecked = 1;
                    return TelephoneNumberChecked;
                case "ZipCode":
                    ZipCodeChecked = 1;
                    return ZipCodeChecked;
                default:
                    return 0;
            }

        }
        void OnSortClick(string newSort)
        {
            ClickListButton(newSort);
            ChangeSearchPlaceHolder();
            _ParentSort = newSort;
        }

        void SearchErrorClear(string SearchError)
        {
            ParentSearch = "";
            _ParentSearch = "";
            StateHasChanged();
        }

        private void UserCountChange(string _UserCount)
        {
            ReturnedUserCount(_UserCount);
        }
        private int ReturnedUserCount(string _userCount)
        {
            UsersCount = Convert.ToInt32(_userCount.ToString());
            return UsersCount;
        }


    

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserService userService { get; set; }
    }
}
#pragma warning restore 1591
