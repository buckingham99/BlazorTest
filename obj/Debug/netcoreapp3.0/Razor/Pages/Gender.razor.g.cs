#pragma checksum "C:\Develop\GitHub\BlazorTest\Pages\Gender.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8287e647f50e376bf70ef60d44dc0764239e0b80"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorTest.Pages
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTest.Shared;
    using Microsoft.AspNetCore.Components;
    using System;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/gender")]
    public class Gender : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "h1");
            builder.AddAttribute(1, "style", "display:none;");
            builder.AddContent(2, ChildContent);
            builder.CloseElement();
            builder.AddMarkupContent(3, "\r\n");
            builder.OpenElement(4, "div");
            builder.AddAttribute(5, "style", "background-color:aqua;display:" + (DisplayType));
            builder.AddMarkupContent(6, "\r\n    ");
            builder.AddMarkupContent(7, "<div>\r\n        <label><b><u>Gender Component:</u></b></label>\r\n    </div>\r\n    ");
            builder.OpenElement(8, "div");
            builder.AddMarkupContent(9, "\r\n");
#line 11 "C:\Develop\GitHub\BlazorTest\Pages\Gender.razor"
         if (@_GenderTypesList.Count > 0)
        {
            

#line default
#line hidden
#line 13 "C:\Develop\GitHub\BlazorTest\Pages\Gender.razor"
             foreach (var u in @_GenderTypesList)
            {

#line default
#line hidden
            builder.AddContent(10, "                ");
            builder.OpenElement(11, "label");
            builder.OpenElement(12, "b");
            builder.AddContent(13, u.GenderType.Trim().ToUpper());
            builder.AddContent(14, ": ");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(15, "\r\n                ");
            builder.OpenElement(16, "label");
            builder.AddContent(17, u.GenderTypeTotalCount.ToString("#,##0"));
            builder.AddContent(18, " ");
            builder.CloseElement();
            builder.AddMarkupContent(19, "\r\n");
#line 17 "C:\Develop\GitHub\BlazorTest\Pages\Gender.razor"
            }

#line default
#line hidden
#line 17 "C:\Develop\GitHub\BlazorTest\Pages\Gender.razor"
             
        }

#line default
#line hidden
            builder.AddContent(20, "    ");
            builder.CloseElement();
            builder.AddMarkupContent(21, "\r\n");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 22 "C:\Develop\GitHub\BlazorTest\Pages\Gender.razor"
            

    [Parameter]
    private RenderFragment ChildContent { get; set; }

    [Serializable]
    public class GenderTypes
    {
        public string GenderType { get; set; }
        public int GenderTypeTotalCount { get; set; }
    }

    List<GenderTypes> _GenderTypesList = new List<GenderTypes>();
    [Parameter]
    public IReadOnlyList<GenderTypes> genderTypesList
    {
        get { return _GenderTypesList; }
        set
        {
            if (value.Count > 0)
            {
                _GenderTypesList = value.ToList();
                onGenderTypes();
            }
        }
    }

    List<GenderTypes> onGenderTypes()
    {
        ToggleDisplay(true);
        return _GenderTypesList.ToList();
    }

    string DisplayType { get; set; }
    private string ToggleDisplay(bool spinnerOn)
    {
        DisplayType = (spinnerOn) ? "block;" : "none;";
        return DisplayType;
    }

    protected override void OnInit()
    {
        ToggleDisplay(false);
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
