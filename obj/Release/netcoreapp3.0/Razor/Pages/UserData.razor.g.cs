#pragma checksum "C:\Develop\GitHub\BlazorTest\Pages\UserData.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d42154f7f117d8b6f03bfc743008f395e55e12e8"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorTest.Pages
{
    #line hidden
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTest.Shared;
    using BlazorTest.Models;
    using BlazorTest.Services;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/userdata")]
    public class UserData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.OpenElement(0, "div");
            builder.AddAttribute(1, "class", "container");
            builder.AddMarkupContent(2, "\r\n        ");
            builder.AddMarkupContent(3, @"<div class=""row"" style=""font-size:small"">
            <div>
                <h5>Test User Data Page</h5>
            </div>
            <div>
                <p>This component demonstrates fetching & editing about 20,000 users and their data from a service via local CSV or JSON file using a HTML Grid.</p>
                <p>Click on a user to edit data and view an OpenLayers Map of their location. </p>
                <p>
                    Keep in mind that this is Fake Data so the Street names and City's will be correct but the
                    House number in the street address is a random number.
                </p>
                <p>
                    Please note that your data will not be persisted between sessions, but a Database can easily be attached
                    to the UserService Class.
                </p>
            </div>
        </div>
        ");
            builder.OpenElement(4, "div");
            builder.AddAttribute(5, "class", "container");
            builder.AddAttribute(6, "style", "border: 1px solid black;");
            builder.AddMarkupContent(7, "\r\n            ");
            builder.OpenElement(8, "div");
            builder.AddAttribute(9, "class", "container");
            builder.AddMarkupContent(10, "\r\n                ");
            builder.OpenElement(11, "div");
            builder.AddAttribute(12, "class", "row");
            builder.AddMarkupContent(13, "\r\n                    ");
            builder.AddMarkupContent(14, "<h5>Parent Component</h5> &nbsp; &nbsp; ");
            builder.OpenElement(15, "label");
            builder.AddContent(16, "  UserCount = ");
            builder.AddContent(17, UsersCount.ToString("#,##0"));
            builder.AddContent(18, " ");
            builder.CloseElement();
            builder.AddMarkupContent(19, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(20, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(21, "\r\n            ");
            builder.OpenElement(22, "div");
            builder.AddAttribute(23, "class", "row");
            builder.AddMarkupContent(24, "\r\n                ");
            builder.OpenElement(25, "div");
            builder.AddAttribute(26, "class", "input-group input-group-md");
            builder.AddAttribute(27, "style", "line-height: 0.5");
            builder.AddMarkupContent(28, "\r\n                    ");
            builder.OpenElement(29, "form");
            builder.AddAttribute(30, "class", "form-group");
            builder.AddMarkupContent(31, "\r\n                        \r\n                        ");
            builder.OpenElement(32, "div");
            builder.AddAttribute(33, "class", "input-group input-group-sm");
            builder.AddMarkupContent(34, "\r\n                            ");
            builder.OpenElement(35, "fieldset");
            builder.AddMarkupContent(36, "\r\n                                ");
            builder.OpenElement(37, "input");
            builder.AddAttribute(38, "type", "search");
            builder.AddAttribute(39, "class", "form-control form-control-sm");
            builder.AddAttribute(40, "id", "SearchText");
            builder.AddAttribute(41, "name", "SearchText");
            builder.AddAttribute(42, "aria-label", "search");
            builder.AddAttribute(43, "aria-describedby", "basic-addon1");
            builder.AddAttribute(44, "placeholder", PlaceHolderSort);
            builder.AddAttribute(45, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(ParentSearch));
            builder.AddAttribute(46, "oninput", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => ParentSearch = __value, ParentSearch));
            builder.CloseElement();
            builder.AddMarkupContent(47, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(48, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(49, "\r\n                        ");
            builder.AddMarkupContent(50, "<div>\r\n                            <br>\r\n                        </div>\r\n                        ");
            builder.OpenElement(51, "div");
            builder.AddAttribute(52, "class", "input-group-sm");
            builder.AddMarkupContent(53, "\r\n                            ");
            builder.OpenElement(54, "fieldset");
            builder.AddMarkupContent(55, "\r\n                                ");
            builder.OpenElement(56, "div");
            builder.AddAttribute(57, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(58, "\r\n                                    ");
            builder.OpenElement(59, "input");
            builder.AddAttribute(60, "type", "radio");
            builder.AddAttribute(61, "id", "lastName");
            builder.AddAttribute(62, "name", "searchGroup");
            builder.AddAttribute(63, "checked", SurnameChecked == 1);
            builder.AddAttribute(64, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "Surname"));
            builder.CloseElement();
            builder.AddMarkupContent(65, "\r\n                                    ");
            builder.AddMarkupContent(66, "<label class=\"radio-inline\" for=\"lastName\">Last Name</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(67, "\r\n                                ");
            builder.OpenElement(68, "div");
            builder.AddAttribute(69, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(70, "\r\n                                    ");
            builder.OpenElement(71, "input");
            builder.AddAttribute(72, "type", "radio");
            builder.AddAttribute(73, "id", "givenName");
            builder.AddAttribute(74, "name", "searchGroup");
            builder.AddAttribute(75, "checked", GivenNameChecked == 1);
            builder.AddAttribute(76, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "GivenName"));
            builder.CloseElement();
            builder.AddMarkupContent(77, "\r\n                                    ");
            builder.AddMarkupContent(78, "<label class=\"radio-inline\" for=\"givenName\">First Name</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(79, "\r\n                                ");
            builder.OpenElement(80, "div");
            builder.AddAttribute(81, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(82, "\r\n                                    ");
            builder.OpenElement(83, "input");
            builder.AddAttribute(84, "type", "radio");
            builder.AddAttribute(85, "id", "address");
            builder.AddAttribute(86, "name", "searchGroup");
            builder.AddAttribute(87, "checked", StreetAddressChecked == 1);
            builder.AddAttribute(88, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "StreetAddress"));
            builder.CloseElement();
            builder.AddMarkupContent(89, "\r\n                                    ");
            builder.AddMarkupContent(90, "<label class=\"radio-inline\" for=\"address\">Address</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(91, "\r\n                                ");
            builder.OpenElement(92, "div");
            builder.AddAttribute(93, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(94, "\r\n                                    ");
            builder.OpenElement(95, "input");
            builder.AddAttribute(96, "type", "radio");
            builder.AddAttribute(97, "id", "city");
            builder.AddAttribute(98, "name", "searchGroup");
            builder.AddAttribute(99, "checked", CityChecked == 1);
            builder.AddAttribute(100, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "City"));
            builder.CloseElement();
            builder.AddMarkupContent(101, "\r\n                                    ");
            builder.AddMarkupContent(102, "<label class=\"radio-inline\" for=\"city\">City</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(103, "\r\n                                ");
            builder.OpenElement(104, "div");
            builder.AddAttribute(105, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(106, "\r\n                                    ");
            builder.OpenElement(107, "input");
            builder.AddAttribute(108, "type", "radio");
            builder.AddAttribute(109, "id", "state");
            builder.AddAttribute(110, "name", "searchGroup");
            builder.AddAttribute(111, "checked", StateChecked == 1);
            builder.AddAttribute(112, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "State"));
            builder.CloseElement();
            builder.AddMarkupContent(113, "\r\n                                    ");
            builder.AddMarkupContent(114, "<label class=\"radio-inline\" for=\"state\">State</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(115, "\r\n                                ");
            builder.OpenElement(116, "div");
            builder.AddAttribute(117, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(118, "\r\n                                    ");
            builder.OpenElement(119, "input");
            builder.AddAttribute(120, "type", "radio");
            builder.AddAttribute(121, "id", "zip");
            builder.AddAttribute(122, "name", "searchGroup");
            builder.AddAttribute(123, "checked", ZipCodeChecked == 1);
            builder.AddAttribute(124, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "ZipCode"));
            builder.CloseElement();
            builder.AddMarkupContent(125, "\r\n                                    ");
            builder.AddMarkupContent(126, "<label class=\"radio-inline\" for=\"zip\">Zip Code</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(127, "\r\n                                ");
            builder.OpenElement(128, "div");
            builder.AddAttribute(129, "class", "custom-control custom-radio custom-control-inline");
            builder.AddMarkupContent(130, "\r\n                                    ");
            builder.OpenElement(131, "input");
            builder.AddAttribute(132, "type", "radio");
            builder.AddAttribute(133, "id", "phone");
            builder.AddAttribute(134, "name", "searchGroup");
            builder.AddAttribute(135, "checked", TelephoneNumberChecked == 1);
            builder.AddAttribute(136, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIChangeEventArgs>(this, () => ParentSort = "TelephoneNumber"));
            builder.CloseElement();
            builder.AddMarkupContent(137, "\r\n                                    ");
            builder.AddMarkupContent(138, "<label class=\"radio-inline\" for=\"phone\">Phone</label>\r\n                                ");
            builder.CloseElement();
            builder.AddMarkupContent(139, "\r\n                            ");
            builder.CloseElement();
            builder.AddMarkupContent(140, "\r\n                        ");
            builder.CloseElement();
            builder.AddMarkupContent(141, "\r\n                    ");
            builder.CloseElement();
            builder.AddMarkupContent(142, "\r\n                ");
            builder.CloseElement();
            builder.AddMarkupContent(143, "\r\n            ");
            builder.CloseElement();
            builder.AddMarkupContent(144, "\r\n        ");
            builder.CloseElement();
            builder.AddMarkupContent(145, "\r\n        <div class=\"row\"></div>\r\n        ");
            builder.OpenComponent<BlazorTest.Pages.DataGrid>(146);
            builder.AddAttribute(147, "SortField", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.String>(_ParentSort));
            builder.AddAttribute(148, "OnSortLinkClicked", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, OnSortClick)));
            builder.AddAttribute(149, "OnSearchError", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, SearchErrorClear)));
            builder.AddAttribute(150, "OnUserCount", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, UserCountChange)));
            builder.AddAttribute(151, "SearchString", Microsoft.AspNetCore.Components.RuntimeHelpers.TypeCheck<System.String>(_ParentSearch));
            builder.CloseComponent();
            builder.AddMarkupContent(152, "\r\n    ");
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 103 "C:\Develop\GitHub\BlazorTest\Pages\UserData.razor"
                
        
        int SurnameChecked { get; set; }
        private int GivenNameChecked { get; set; }
        private int StreetAddressChecked { get; set; }
        private int CityChecked { get; set; }
        private int StateChecked { get; set; }
        private int ZipCodeChecked { get; set; }
        private int TelephoneNumberChecked { get; set; }

        private string newSort  { get; set; }
        public int UsersCount { get; set; }
        public string PlaceHolderSort { get; set; } = "Search Last Name ...";

        //extern int UserService.ThrowEvent += MyEventHandler();

        //int tmpInt = userService.SomethingHappened();
        
        public string _ParentSort { get; set; } = "Surname";

        public string ParentSort
        {
            get { return _ParentSort; }
            set
            {
                if (value != null)
                {
                    _ParentSort = value;
                    ChangeSearchPlaceHolder();
                    ClickListButton(value);
                    SortChildComponent();
                }
            }
        }
        public string _ParentSearch { get; set; }
        public string ParentSearch
        {
            get { return _ParentSearch; }
            set
            {
                _ParentSearch = value;
                SearchChildComponent();
            }
        }
        public string SortChildComponent()
        {
            return _ParentSort;
        }
        public string SearchChildComponent()
        {
            return _ParentSearch;
        }
        public string ChangeSearchPlaceHolder()
        {
            switch (_ParentSort)
            {
                case "Surname":
                    PlaceHolderSort = "Search Last Name ...";
                    break;
                case "GivenName":
                    PlaceHolderSort = "Search First Name ...";
                    break;
                case "StreetAddress":
                    PlaceHolderSort = "Search Address ...";
                    break;
                case "City":
                    PlaceHolderSort = "Search City ...";
                    break;
                case "State":
                    PlaceHolderSort = "Search State ...";
                    break;
                case "ZipCode":
                    PlaceHolderSort = "Search Zip Code ...";
                    break;
                case "TelephoneNumber":
                    PlaceHolderSort = "Search Phone Number ...";
                    break;
                default:
                    break;
            }
            ShouldRender();
            return PlaceHolderSort;

        }
        private int ClickListButton(string returnedString)
        {
            SurnameChecked = 0;
            GivenNameChecked = 0;
            StreetAddressChecked = 0;
            CityChecked = 0;
            StateChecked = 0;
            TelephoneNumberChecked = 0;
            ZipCodeChecked = 0;
            ShouldRender();
            switch (returnedString)
            {
                case "Surname":
                    SurnameChecked = 1;
                    return SurnameChecked;
                case "GivenName":
                    GivenNameChecked = 1;
                    return GivenNameChecked;
                case "StreetAddress":
                    StreetAddressChecked = 1;
                    return StreetAddressChecked;
                case "City":
                    CityChecked = 1;
                    return CityChecked;
                case "State":
                    StateChecked = 1;
                    return StateChecked;
                case "TelephoneNumber":
                    TelephoneNumberChecked = 1;
                    return TelephoneNumberChecked;
                case "ZipCode":
                    ZipCodeChecked = 1;
                    return ZipCodeChecked;
                default:
                    return 0;
            }

        }
        void OnSortClick(string newSort)
        {
            _ParentSort = newSort;
            ChangeSearchPlaceHolder();
            ClickListButton(newSort);

        }

        void SearchErrorClear(string SearchError)
        {
            ParentSearch = "";
            _ParentSearch = "";
            StateHasChanged();
        }

        private void UserCountChange(string _UserCount)
        {
            ReturnedUserCount(_UserCount);
        }
        private int ReturnedUserCount(string _userCount)
        {
            UsersCount = Convert.ToInt32(_userCount.ToString());
            return UsersCount;
        }

        void SubscribeToEvent(UserService theInstance)
        {
            theInstance.ThrowEvent += this.MyEventHandler;
        }

        void MyEventHandler(object sender, EventArgs args)
        {
            //return 0;
        }


    

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserService userService { get; set; }
    }
}
#pragma warning restore 1591
