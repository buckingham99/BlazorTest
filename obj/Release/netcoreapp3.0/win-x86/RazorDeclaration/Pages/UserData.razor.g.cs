#pragma checksum "C:\Develop\GitHub\BlazorTest\Pages\UserData.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "93084d4199f3186b1750d9df4f446dc4eebb7260"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorTest.Pages
{
    #line hidden
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using BlazorTest.Shared;
    using BlazorTest.Models;
    using BlazorTest.Services;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/userdata")]
    public class UserData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 69 "C:\Develop\GitHub\BlazorTest\Pages\UserData.razor"
            
    private int SurnameChecked { get; set; } = 1;
    private int GivenNameChecked { get; set; }
    private int StreetAddressChecked { get; set; }
    private int CityChecked { get; set; }
    private int StateChecked { get; set; }
    private int ZipCodeChecked { get; set; }
    private int TelephoneNumberChecked { get; set; }
    private string newMessage  { get; set; }
    public int UsersCount { get; set; }
    public string PlaceHolderSort { get; set; } = "Search Last Name ...";

    public string _ParentSort { get; set; } = "Surname";

    public string ParentSort
    {
        get { return _ParentSort; }
        set
        {
            if (value != null)
            {
                _ParentSort = value;
                SortOrder();
            }
        }
    }
    public string _ParentSearch { get; set; } = "";
    public string ParentSearch
    {
        get { return string.Empty; }
        set
        {
            if (value != null)
            {
                _ParentSearch = value;
                SortOrder();
                StateHasChanged();
            }
        }
    }

    public List<string> ParentParameters = new List<string>();
    
    public List<string> SortOrder()
    {
        switch (_ParentSort)
        {
            case "Surname":
                PlaceHolderSort = "Search Last Name ...";
                break;
            case "GivenName":
                PlaceHolderSort = "Search First Name ...";
                break;
            case "StreetAddress":
                PlaceHolderSort = "Search Address ...";
                break;
            case "City":
                PlaceHolderSort = "Search City ...";
                break;
            case "State":
                PlaceHolderSort = "Search State ...";
                break;
            case "ZipCode":
                PlaceHolderSort = "Search Zip Code ...";
                break;
            case "TelephoneNumber":
                PlaceHolderSort = "Search Telephone Number ...";
                break;
            default:
                break;
        }
        ParentParameters.Clear();
        ParentParameters.Add(_ParentSort);
        ParentParameters.Add(_ParentSearch);
        //ReturnedCheck(_ParentSort);

        StateHasChanged();
        return ParentParameters;

    }

    void OnSortClick(string newMessage)
    {
        ReturnedCheck(newMessage);

        _ParentSort = newMessage;
        SortOrder();

        StateHasChanged();
    }

    void SearchErrorClear(string SearchError)
    {
        ParentSearch = "";
        _ParentSearch = "";
        StateHasChanged();
    }

    private int ReturnedCheck(string returnedString)
    {

        switch (returnedString)
        {
            case "Surname":
                SurnameChecked = 1;
                return SurnameChecked;
            case "GivenName":
                GivenNameChecked = 1;
                return GivenNameChecked;
            case "StreetAddress":
                StreetAddressChecked = 1;
                return StreetAddressChecked;
            case "City":
                CityChecked = 1;
                return CityChecked;
            case "State":
                StateChecked = 1;
                return StateChecked;
            case "TelephoneNumber":
                TelephoneNumberChecked = 1;
                return TelephoneNumberChecked;
            case "ZipCode":
                ZipCodeChecked = 1;
                return ZipCodeChecked;
            default:
                return 0;
        }

    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private DataGridService dgService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private UserService userService { get; set; }
    }
}
#pragma warning restore 1591
