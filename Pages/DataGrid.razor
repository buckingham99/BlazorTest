@using BlazorTest.Models;
@using BlazorTest.Services;
@using BlazorTest.Helpers;
@using System.Collections.Generic;
@using System.Linq;
@using System.Text;
@using Microsoft.AspNetCore.Components;

@inject NamesService NamesService;
@inject IJSRuntime JSRuntime;


<div class="container">
    <div class="row">
        <h3>Users DataGrid Component</h3>
    </div>
    <div class="row">
        <b>Users count:  (@namesCount)</b>
    </div>

    <div class="row">
        <div class="loader" bind="@LoaderDisplayType" style="display:@LoaderDisplayType"></div>
    </div>
    <div class="container">
        <div class="row">
            <div class="tableFixHead">
                <table>
                    <thead>
                        <tr>
                            <th>
                                <div><a href="javascript:void(0)" title="Default Sort by Id" onclick="@( () => SortData("Id"))"><b> </b></a><span style="background-color:ActiveBorder;" class="oi oi-target" title="Default Sort" onclick="@( () => SortData("Id"))"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by Last Name" onclick="@( () => SortData("Surname"))"><b>Last Name</b></a> <span class="@SurnameSort"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by First Name" onclick="@( () => SortData("GivenName"))"><b>First Name</b></a> <span class="@GivenNameSort"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by Street Address" onclick="@( () => SortData("StreetAddress"))"><b>Address</b></a> <span class="@StreetAddressSort"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by City" onclick="@( () => SortData("City"))"><b>City</b></a> <span class="@CitySort"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by State" onclick="@( () => SortData("State"))"><b>State</b></a> <span class="@StateSort"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by Zip Code" onclick="@( () => SortData("ZipCode"))"><b>Zip</b></a> <span class="@ZipCodeSort"></span></div>
                            </th>
                            <th>
                                <div><a href="javascript:void(0)" title="Sort by Telephone Number" onclick="@( () => SortData("TelephoneNumber"))"><b>Phone</b></a> <span class="@PhoneSort"></span></div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (displayUsers != null)
                        {
                            @foreach (var u in @displayUsers)
                            {
                                <tr onclick="@( () => EditUser(@u))" title="Click to Edit">
                                    <td><a href="javascript:void(0);" onclick="@( () => EditUser(@u))"><span class="oi oi-magnifying-glass"></span></a></td>
                                    <td>@u.Surname</td>
                                    <td>@u.GivenName</td>
                                    <td>@u.StreetAddress</td>
                                    <td>@u.City</td>
                                    <td>@u.State</td>
                                    <td>@u.ZipCode.ToString()</td>
                                    <td>@u.TelephoneNumber</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div>
                <ul class="pagination pagination-sm pager">
                    @foreach (var i in btnlist)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a href="javascript:void(0)" class="page-link" title="Page: @i" value-bind="@i" onclick="@( () => ChangePage(@i))">@i</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
@if (SelectedUser != null)
{
    <div class="container">
        <div id="editUserModal" class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
                <div class="modal-content">
                    <div class="modal-header" style="background-color:lightgray;">
                        <h5 id="modalTitle" class="modal-title">Edit User: <b><u>@(SelectedUser.GivenName + " " + SelectedUser.Surname)</u></b> <span class="oi oi-map-marker" title="Scroll To Map" alt="Scroll To Map" onclick="@( () => ScrollToMap())"></span></h5>
                        <button type="button" aria-label="Close" class="close" data-dismiss="modal" onclick="@( () => CancelSaveUser(SelectedUser))">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div id="modalBody" class="modal-body">
                        <div class="panel-body">
                            <form role="form">
                                <div class="row" style="background-color:azure;">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="first_name">First Name</label>
                                            <input type="text" name="first_name" id="first_name" class="form-control input-sm" bind-value-onchange="@SelectedUser.GivenName" placeholder="First Name" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="last_name">Last Name</label>
                                            <input type="text" name="last_name" id="last_name" class="form-control input-sm" bind="@SelectedUser.Surname" placeholder="Last Name" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-12 col-md-12">
                                        <div class="form-group">
                                            <label for="address">Street Address</label>
                                            <input type="text" name="address" id="streetAddress" class="form-control input-sm" bind-value-onchange="@SelectedUser.StreetAddress" placeholder="Street Address" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="city">City</label>
                                            <input type="text" name="city" id="city" class="form-control input-sm" bind-value-onchange="@SelectedUser.City" placeholder="City" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="state">State</label>
                                            <input type="text" name="state" id="state" class="form-control input-sm" bind-value-onchange="@SelectedUser.State" placeholder="State" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="zipCode">Zip Code</label>
                                            <input type="text" name="zipCode" id="zipCode" class="form-control input-sm" bind-value-onchange="@SelectedUser.ZipCode" placeholder="Zip Code" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="telephone">Telephone</label>
                                            <input type="tel" name="telephone" id="telephone" class="form-control input-sm" bind-value-onchange="@SelectedUser.TelephoneNumber" placeholder="Telephone #" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row" style="background-color:azure;">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="zodiacSign">Zodiac Sign</label>
                                            <input type="text" name="zodiacSign" id="zodiacSign" class="form-control input-sm" bind-value-onchange="@SelectedUser.TropicalZodiac" placeholder="Zodiac Sign" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="birthdate">Birth Day</label>
                                            <input type="text" name="birthdate" id="birthdate" class="form-control input-sm" bind-value-onchange="@SelectedUser.Birthday" placeholder="Birthday" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="momMaiden">Mothers Maiden Name</label>
                                            <input type="text" name="momMaiden" id="momMaiden" class="form-control input-sm" bind-value-onchange="@SelectedUser.MothersMaiden" placeholder="Mother's Maiden Name" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="age">Age</label>
                                            <input type="text" name="age" id="age" class="form-control input-sm" bind-value-onchange="@SelectedUser.Age" placeholder="Age" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="bloodType">Blood Type</label>
                                            <input type="text" name="bloodType" id="bloodType" class="form-control input-sm" bind-value-onchange="@SelectedUser.BloodType" placeholder="Blood Type" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="pounds">Weight</label>
                                            <input type="text" name="pounds" id="pounds" class="form-control input-sm" bind-value-onchange="@SelectedUser.Pounds" placeholder="Weight" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row" style="background-color:blanchedalmond;">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="CCType">Credit Card Type</label>
                                            <input type="text" name="CCType" id="CCType" class="form-control input-sm" bind-value-onchange="@SelectedUser.CCType" placeholder="Credit Card Type" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="CCNumber">Credit Card Number</label>
                                            <input type="text" name="CCNumber" id="CCNumber" class="form-control input-sm" bind-value-onchange="@SelectedUser.CCNumber" placeholder="Credit Card Number" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="CVV2">CVV2</label>
                                            <input type="text" name="CVV2" id="CVV2" class="form-control input-sm" bind-value-onchange="@SelectedUser.CVV2" placeholder="CVV2" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="CCExpires">CCExpires</label>
                                            <input type="text" name="CCExpires" id="CCExpires" class="form-control input-sm" bind-value-onchange="@SelectedUser.CCExpires" placeholder="CCExpires" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="WesternUnionMTCN">Western Union Tracking Number</label>
                                            <input type="text" name="WesternUnionMTCN" id="WesternUnionMTCN" class="form-control input-sm" bind-value-onchange="@SelectedUser.WesternUnionMTCN" placeholder="Western Union Tracking Number" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="MoneyGramMTCN">MoneyGram Tracking Number</label>
                                            <input type="text" name="MoneyGramMTCN" id="MoneyGramMTCN" class="form-control input-sm" bind-value-onchange="@SelectedUser.MoneyGramMTCN" placeholder="MoneyGram Tracking Number" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-xs-6 col-sm-12 col-md-12">
                                        <div class="form-group">
                                            <label for="company">Company</label>
                                            <input type="text" name="company" id="company" class="form-control input-sm" bind-value-onchange="@SelectedUser.Company" placeholder="Company" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-12 col-md-12">
                                        <div class="form-group">
                                            <label for="occupation">Occupation</label>
                                            <input type="text" name="occupation" id="occupation" class="form-control input-sm" bind-value-onchange="@SelectedUser.Occupation" placeholder="Occupation" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="vehicle">Vehicle</label>
                                            <input type="text" name="vehicle" id="vehicle" class="form-control input-sm" bind-value-onchange="@SelectedUser.Vehicle" placeholder="Vehicle" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="color">Vehicle Color</label>
                                            <input type="text" name="color" id="color" class="form-control input-sm" bind-value-onchange="@SelectedUser.Color" placeholder="Vehicle Color" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="username">User Name</label>
                                            <input type="text" name="username" id="username" class="form-control input-sm" bind-value-onchange="@SelectedUser.Username" placeholder="User Name" />
                                        </div>
                                    </div>
                                    <div class="col-xs-6 col-sm-6 col-md-6">
                                        <div class="form-group">
                                            <label for="password">Password</label>
                                            <input type="text" name="password" id="password" class="form-control input-sm" bind-value-onchange="@SelectedUser.Password" placeholder="Password" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div id="map" class="map" style="height:400px;width:100%;"></div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" onclick="@( () => CancelSaveUser(SelectedUser))" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-primary" onclick="@( () => SaveUser(SelectedUser))">Save changes</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@functions {
    private int currentPage = 1;
    private int pageSize = 30;

    private List<User> users = new List<User>();
    private List<User> displayUsers = new List<User>();
    public User UnModifiedUser = new User();
    private User SelectedUser = new User();
    private int namesCount = 0;

    private string SortField = "Id";
    private bool SortDesc = false;
    private string SurnameSort = String.Empty;
    private string GivenNameSort = String.Empty;
    private string StreetAddressSort = String.Empty;
    private string CitySort = String.Empty;
    private string StateSort = String.Empty;
    private string ZipCodeSort = String.Empty;
    private string PhoneSort = String.Empty;
    private string LoaderDisplayType = "block;";
    private int TotalPages => users.Count > 0 ? (int)Math.Ceiling(decimal.Divide(users.Count, pageSize)) : 0;
    private List<int> btnlist = new List<int>();

    /// I changed this to OnInit from OnInit Async
    /// since I'm populating the Queue once the Index page has loaded,
    /// so speed in this method is not of the essence.
    protected override void OnInit()
    {
        ToggleSpinner(true);
        users = NamesService.GetNamesData(SortField, SortDesc);
        namesCount = users.Count;

        for (int i = 1; i < TotalPages + 1; i++)
        {
            btnlist.Add(i);
        }
        displayUsers = users.OrderByDescending(s => s.GetType()
        .GetProperty(SortField)
        .GetValue(s))
        .Skip((currentPage - 1) * pageSize)
        .Take(pageSize).ToList();
        ToggleSpinner(false);
        StateHasChanged();
    }
    private void ToggleSpinner(bool spinnerOn)
    {
        LoaderDisplayType = (spinnerOn) ? "block;" : "none;";
    }
    void ChangePage(int newPage)
    {
        ToggleSpinner(true);
        currentPage = newPage;
        SortDesc = !SortDesc; //Reverse Sort so that the sort stays the same
        SortData(SortField);
        StateHasChanged();
        ToggleSpinner(false);

    }


    private void SortData(string NewSort)
    {
        SortField = NewSort;
       ToggleSpinner(true);
        BlankDirectionIcons();
        SortDesc = !SortDesc;
        CalcIconDirection(SortField);
        if (SortDesc)
        {
            displayUsers = users.OrderByDescending(s => s.GetType()
            .GetProperty(SortField)
            .GetValue(s))
            .Skip((currentPage - 1) * pageSize)
            .Take(pageSize).ToList();
        }
        else
        {
            displayUsers = users.OrderBy(s => s.GetType()
            .GetProperty(SortField)
            .GetValue(s))
            .Skip((currentPage - 1) * pageSize)
            .Take(pageSize).ToList();
        }
        ToggleSpinner(false);
    }

    private string CalcIconDirection(string SortField)
    {
        string szDirection = SortDesc == true ? "oi oi-arrow-thick-bottom" : "oi oi-arrow-thick-top";
        switch (SortField)
        {
            case "Surname":
                SurnameSort = szDirection;
                return SurnameSort;
            case "GivenName":
                GivenNameSort = szDirection;
                return GivenNameSort;
            case "StreetAddress":
                StreetAddressSort = szDirection;
                return StreetAddressSort;
            case "City":
                CitySort = szDirection;
                return CitySort;
            case "State":
                StateSort = szDirection;
                return StateSort;
            case "TelephoneNumber":
                PhoneSort = szDirection;
                return PhoneSort;
            case "ZipCode":
                ZipCodeSort = szDirection;
                return ZipCodeSort;
            default:
                return String.Empty;
        }
    }
    void BlankDirectionIcons()
    {
        SurnameSort = "";
        GivenNameSort = "";
        StreetAddressSort = "";
        CitySort = "";
        StateSort = "";
        PhoneSort = "";
        ZipCodeSort = "";
    }

    private async void EditUser(User myUser)
    {
        SelectedUser = myUser;
        UnModifiedUser = Comparer.DeepCopy<User>(SelectedUser);

        await JSRuntime.InvokeAsync<string>(
                 "appFunctions.showEditUserModal", "");
        string coords = SelectedUser.Longitude + ", " + SelectedUser.Latitude;
        await JSRuntime.InvokeAsync<string>(
                 "appFunctions.showMap", coords);
        //StateHasChanged();
    }
    private async Task<List<User>> SaveUser(User SelectedUser)
    {
        //await JSRuntime.InvokeAsync<string>(
        //    "appfunctions.saveConfirmation", "");

        //await JSRuntime.InvokeAsync<string>(
        //    "appFunctions.hideEditUserModal", "");

        users = await NamesService.SaveUserAsync(SortField, SortDesc, users, SelectedUser, currentPage, pageSize);

        await JSRuntime.InvokeAsync<string>(
                "appFunctions.hideEditUserModal", "");

        ToggleSpinner(false);
        StateHasChanged();
        return users;
    }
    private async void ScrollToMap()
    {
        await JSRuntime.InvokeAsync<string>(
            "appFunctions.scrollToMap", "");
    }
    private async Task<List<User>> CancelSaveUser(User SelectedUser)
    {
        if (!Comparer.DeepCompare(SelectedUser, UnModifiedUser))
        {
            users = await NamesService.SaveUserAsync(SortField, SortDesc, users, UnModifiedUser, currentPage, pageSize);
        }


        SelectedUser = null;
        UnModifiedUser = null;

        await JSRuntime.InvokeAsync<string>(
            "appFunctions.hideEditUserModal", "");

        ToggleSpinner(false);
        return users;
    }
}

