@page "/gender"
@using Microsoft.AspNetCore.Components;
@using  System;

<h1 style="display:none;">@ChildContent</h1>
<div style="background-color:aqua;display:@DisplayType">
    <div>
        <label><b><u>Gender Component:</u></b></label>
    </div>
    <div>
        @if (@_GenderTypesList.Count > 0)
        {
            @foreach (var u in @_GenderTypesList)
            {
                <label><b>@u.GenderType.Trim().ToUpper(): </b></label>
                <label>@u.GenderTypeTotalCount.ToString("#,##0") </label>
            }
        }
    </div>
</div>

@functions {

    [Parameter]
    private RenderFragment ChildContent { get; set; }

    [Serializable]
    public class GenderTypes
    {
        public string GenderType { get; set; }
        public int GenderTypeTotalCount { get; set; }
    }

    List<GenderTypes> _GenderTypesList = new List<GenderTypes>();
    [Parameter]
    public IReadOnlyList<GenderTypes> genderTypesList
    {
        get { return _GenderTypesList; }
        set
        {
            if (value.Count > 0)
            {
                _GenderTypesList = value.ToList();
                onGenderTypes();
            }
        }
    }

    List<GenderTypes> onGenderTypes()
    {
        ToggleDisplay(true);
        return _GenderTypesList.ToList();
    }

    string DisplayType { get; set; }
    private string ToggleDisplay(bool spinnerOn)
    {
        DisplayType = (spinnerOn) ? "block;" : "none;";
        return DisplayType;
    }

    protected override void OnInit()
    {
        ToggleDisplay(false);
    }
}


