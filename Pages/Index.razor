@page "/"
@using BlazorTest.Services;
@using BlazorTest.Models;
@inject UserService UserService;
<HeadingComponent />

<h2>Blazor Test by Mark Buckingham</h2>
<p>This is a test of using <b>Client Side</b> <u>Blazor Components</u></p>

<p>This is the standard Blazor Client side template and it's been extended from there.</p>

<p>
    I didn't want to load up a MDF file for the database, so I used a CSV file from FakeNames.Com for data.
    (Located in the Data folder).
</p>
<p>
    The Test Users page is a grid that parses a CSV or JSON file via a Users Service
    to creates a list of users that is persisted in a Memory Cache.  You can Sort or Search 
    the grid

    This page also takes advantage of invoking JavaScript to handle a standard Bootstrap Modal.
    Changes can be made and will persist throughout the session, they will go away
    once you've navigated away from the site.
    You can easily add a database to this via the Names Service and persist the data.
</p>




@functions {
    List<User> users = new List<User>();
    string SortField = "Surname";
    bool SortDesc = false;

    protected async Task OnRenderAsync()
    {
        //users = await UserService.GetNamesJsonAsync(SortField, SortDesc);
        users = await UserService.GetNamesDataAsync(SortField, SortDesc);
    }
}
